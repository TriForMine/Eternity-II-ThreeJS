var Ge=Object.defineProperty;var Je=(ht,at,Dt)=>at in ht?Ge(ht,at,{enumerable:!0,configurable:!0,writable:!0,value:Dt}):ht[at]=Dt;var F=(ht,at,Dt)=>Je(ht,typeof at!="symbol"?at+"":at,Dt);(function(){"use strict";/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const ht="169",Hi="",K="srgb",xi="srgb-linear",xe="display-p3",Wi="display-p3-linear",yi="linear",Gi="srgb",Ji="rec709",Zi="p3";class Jt{addEventListener(t,i){this._listeners===void 0&&(this._listeners={});const e=this._listeners;e[t]===void 0&&(e[t]=[]),e[t].indexOf(i)===-1&&e[t].push(i)}hasEventListener(t,i){if(this._listeners===void 0)return!1;const e=this._listeners;return e[t]!==void 0&&e[t].indexOf(i)!==-1}removeEventListener(t,i){if(this._listeners===void 0)return;const s=this._listeners[t];if(s!==void 0){const n=s.indexOf(i);n!==-1&&s.splice(n,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const e=this._listeners[t.type];if(e!==void 0){t.target=this;const s=e.slice(0);for(let n=0,r=s.length;n<r;n++)s[n].call(this,t);t.target=null}}}const I=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function Ot(){const m=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0,e=Math.random()*4294967295|0;return(I[m&255]+I[m>>8&255]+I[m>>16&255]+I[m>>24&255]+"-"+I[t&255]+I[t>>8&255]+"-"+I[t>>16&15|64]+I[t>>24&255]+"-"+I[i&63|128]+I[i>>8&255]+"-"+I[i>>16&255]+I[i>>24&255]+I[e&255]+I[e>>8&255]+I[e>>16&255]+I[e>>24&255]).toLowerCase()}function N(m,t,i){return Math.max(t,Math.min(i,m))}function ye(m,t){return(m%t+t)%t}function gi(m,t,i){return(1-i)*m+i*t}function Nt(m,t){switch(t.constructor){case Float32Array:return m;case Uint32Array:return m/4294967295;case Uint16Array:return m/65535;case Uint8Array:return m/255;case Int32Array:return Math.max(m/2147483647,-1);case Int16Array:return Math.max(m/32767,-1);case Int8Array:return Math.max(m/127,-1);default:throw new Error("Invalid component type.")}}function L(m,t){switch(t.constructor){case Float32Array:return m;case Uint32Array:return Math.round(m*4294967295);case Uint16Array:return Math.round(m*65535);case Uint8Array:return Math.round(m*255);case Int32Array:return Math.round(m*2147483647);case Int16Array:return Math.round(m*32767);case Int8Array:return Math.round(m*127);default:throw new Error("Invalid component type.")}}class q{constructor(t=0,i=0){q.prototype.isVector2=!0,this.x=t,this.y=i}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,i){return this.x=t,this.y=i,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,i){switch(t){case 0:this.x=i;break;case 1:this.y=i;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this}addScaledVector(t,i){return this.x+=t.x*i,this.y+=t.y*i,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const i=this.x,e=this.y,s=t.elements;return this.x=s[0]*i+s[3]*e+s[6],this.y=s[1]*i+s[4]*e+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this}clampScalar(t,i){return this.x=Math.max(t,Math.min(i,this.x)),this.y=Math.max(t,Math.min(i,this.y)),this}clampLength(t,i){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(i,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const i=Math.sqrt(this.lengthSq()*t.lengthSq());if(i===0)return Math.PI/2;const e=this.dot(t)/i;return Math.acos(N(e,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const i=this.x-t.x,e=this.y-t.y;return i*i+e*e}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this}lerpVectors(t,i,e){return this.x=t.x+(i.x-t.x)*e,this.y=t.y+(i.y-t.y)*e,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,i=0){return this.x=t[i],this.y=t[i+1],this}toArray(t=[],i=0){return t[i]=this.x,t[i+1]=this.y,t}fromBufferAttribute(t,i){return this.x=t.getX(i),this.y=t.getY(i),this}rotateAround(t,i){const e=Math.cos(i),s=Math.sin(i),n=this.x-t.x,r=this.y-t.y;return this.x=n*e-r*s+t.x,this.y=n*s+r*e+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ot{constructor(t,i,e,s,n,r,a,h,o){ot.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,i,e,s,n,r,a,h,o)}set(t,i,e,s,n,r,a,h,o){const l=this.elements;return l[0]=t,l[1]=s,l[2]=a,l[3]=i,l[4]=n,l[5]=h,l[6]=e,l[7]=r,l[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const i=this.elements,e=t.elements;return i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=e[3],i[4]=e[4],i[5]=e[5],i[6]=e[6],i[7]=e[7],i[8]=e[8],this}extractBasis(t,i,e){return t.setFromMatrix3Column(this,0),i.setFromMatrix3Column(this,1),e.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const i=t.elements;return this.set(i[0],i[4],i[8],i[1],i[5],i[9],i[2],i[6],i[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,i){const e=t.elements,s=i.elements,n=this.elements,r=e[0],a=e[3],h=e[6],o=e[1],l=e[4],c=e[7],u=e[2],d=e[5],p=e[8],f=s[0],y=s[3],g=s[6],S=s[1],_=s[4],M=s[7],w=s[2],A=s[5],b=s[8];return n[0]=r*f+a*S+h*w,n[3]=r*y+a*_+h*A,n[6]=r*g+a*M+h*b,n[1]=o*f+l*S+c*w,n[4]=o*y+l*_+c*A,n[7]=o*g+l*M+c*b,n[2]=u*f+d*S+p*w,n[5]=u*y+d*_+p*A,n[8]=u*g+d*M+p*b,this}multiplyScalar(t){const i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=t,i[4]*=t,i[7]*=t,i[2]*=t,i[5]*=t,i[8]*=t,this}determinant(){const t=this.elements,i=t[0],e=t[1],s=t[2],n=t[3],r=t[4],a=t[5],h=t[6],o=t[7],l=t[8];return i*r*l-i*a*o-e*n*l+e*a*h+s*n*o-s*r*h}invert(){const t=this.elements,i=t[0],e=t[1],s=t[2],n=t[3],r=t[4],a=t[5],h=t[6],o=t[7],l=t[8],c=l*r-a*o,u=a*h-l*n,d=o*n-r*h,p=i*c+e*u+s*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return t[0]=c*f,t[1]=(s*o-l*e)*f,t[2]=(a*e-s*r)*f,t[3]=u*f,t[4]=(l*i-s*h)*f,t[5]=(s*n-a*i)*f,t[6]=d*f,t[7]=(e*h-o*i)*f,t[8]=(r*i-e*n)*f,this}transpose(){let t;const i=this.elements;return t=i[1],i[1]=i[3],i[3]=t,t=i[2],i[2]=i[6],i[6]=t,t=i[5],i[5]=i[7],i[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const i=this.elements;return t[0]=i[0],t[1]=i[3],t[2]=i[6],t[3]=i[1],t[4]=i[4],t[5]=i[7],t[6]=i[2],t[7]=i[5],t[8]=i[8],this}setUvTransform(t,i,e,s,n,r,a){const h=Math.cos(n),o=Math.sin(n);return this.set(e*h,e*o,-e*(h*r+o*a)+r+t,-s*o,s*h,-s*(-o*r+h*a)+a+i,0,0,1),this}scale(t,i){return this.premultiply(Mi.makeScale(t,i)),this}rotate(t){return this.premultiply(Mi.makeRotation(-t)),this}translate(t,i){return this.premultiply(Mi.makeTranslation(t,i)),this}makeTranslation(t,i){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,i,0,0,1),this}makeRotation(t){const i=Math.cos(t),e=Math.sin(t);return this.set(i,-e,0,e,i,0,0,0,1),this}makeScale(t,i){return this.set(t,0,0,0,i,0,0,0,1),this}equals(t){const i=this.elements,e=t.elements;for(let s=0;s<9;s++)if(i[s]!==e[s])return!1;return!0}fromArray(t,i=0){for(let e=0;e<9;e++)this.elements[e]=t[e+i];return this}toArray(t=[],i=0){const e=this.elements;return t[i]=e[0],t[i+1]=e[1],t[i+2]=e[2],t[i+3]=e[3],t[i+4]=e[4],t[i+5]=e[5],t[i+6]=e[6],t[i+7]=e[7],t[i+8]=e[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Mi=new ot;function ge(m){for(let t=m.length-1;t>=0;--t)if(m[t]>=65535)return!0;return!1}function bi(m){return document.createElementNS("http://www.w3.org/1999/xhtml",m)}const Yi=new ot().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Ki=new ot().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Lt={[xi]:{transfer:yi,primaries:Ji,luminanceCoefficients:[.2126,.7152,.0722],toReference:m=>m,fromReference:m=>m},[K]:{transfer:Gi,primaries:Ji,luminanceCoefficients:[.2126,.7152,.0722],toReference:m=>m.convertSRGBToLinear(),fromReference:m=>m.convertLinearToSRGB()},[Wi]:{transfer:yi,primaries:Zi,luminanceCoefficients:[.2289,.6917,.0793],toReference:m=>m.applyMatrix3(Ki),fromReference:m=>m.applyMatrix3(Yi)},[xe]:{transfer:Gi,primaries:Zi,luminanceCoefficients:[.2289,.6917,.0793],toReference:m=>m.convertSRGBToLinear().applyMatrix3(Ki),fromReference:m=>m.applyMatrix3(Yi).convertLinearToSRGB()}},Me=new Set([xi,Wi]),H={enabled:!0,_workingColorSpace:xi,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(m){if(!Me.has(m))throw new Error(`Unsupported working color space, "${m}".`);this._workingColorSpace=m},convert:function(m,t,i){if(this.enabled===!1||t===i||!t||!i)return m;const e=Lt[t].toReference,s=Lt[i].fromReference;return s(e(m))},fromWorkingColorSpace:function(m,t){return this.convert(m,this._workingColorSpace,t)},toWorkingColorSpace:function(m,t){return this.convert(m,t,this._workingColorSpace)},getPrimaries:function(m){return Lt[m].primaries},getTransfer:function(m){return m===Hi?yi:Lt[m].transfer},getLuminanceCoefficients:function(m,t=this._workingColorSpace){return m.fromArray(Lt[t].luminanceCoefficients)}};function wt(m){return m<.04045?m*.0773993808:Math.pow(m*.9478672986+.0521327014,2.4)}function wi(m){return m<.0031308?m*12.92:1.055*Math.pow(m,.41666)-.055}let St;class be{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let i;if(t instanceof HTMLCanvasElement)i=t;else{St===void 0&&(St=bi("canvas")),St.width=t.width,St.height=t.height;const e=St.getContext("2d");t instanceof ImageData?e.putImageData(t,0,0):e.drawImage(t,0,0,t.width,t.height),i=St}return i.width>2048||i.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),i.toDataURL("image/jpeg",.6)):i.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const i=bi("canvas");i.width=t.width,i.height=t.height;const e=i.getContext("2d");e.drawImage(t,0,0,t.width,t.height);const s=e.getImageData(0,0,t.width,t.height),n=s.data;for(let r=0;r<n.length;r++)n[r]=wt(n[r]/255)*255;return e.putImageData(s,0,0),i}else if(t.data){const i=t.data.slice(0);for(let e=0;e<i.length;e++)i instanceof Uint8Array||i instanceof Uint8ClampedArray?i[e]=Math.floor(wt(i[e]/255)*255):i[e]=wt(i[e]);return{data:i,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let we=0;class Se{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:we++}),this.uuid=Ot(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const i=t===void 0||typeof t=="string";if(!i&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const e={uuid:this.uuid,url:""},s=this.data;if(s!==null){let n;if(Array.isArray(s)){n=[];for(let r=0,a=s.length;r<a;r++)s[r].isDataTexture?n.push(Si(s[r].image)):n.push(Si(s[r]))}else n=Si(s);e.url=n}return i||(t.images[this.uuid]=e),e}}function Si(m){return typeof HTMLImageElement<"u"&&m instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&m instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&m instanceof ImageBitmap?be.getDataURL(m):m.data?{data:Array.from(m.data),width:m.width,height:m.height,type:m.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let ze=0;class lt extends Jt{constructor(t=lt.DEFAULT_IMAGE,i=lt.DEFAULT_MAPPING,e=1001,s=1001,n=1006,r=1008,a=1023,h=1009,o=lt.DEFAULT_ANISOTROPY,l=Hi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:ze++}),this.uuid=Ot(),this.name="",this.source=new Se(t),this.mipmaps=[],this.mapping=i,this.channel=0,this.wrapS=e,this.wrapT=s,this.magFilter=n,this.minFilter=r,this.anisotropy=o,this.format=a,this.internalFormat=null,this.type=h,this.offset=new q(0,0),this.repeat=new q(1,1),this.center=new q(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ot,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=l,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const i=t===void 0||typeof t=="string";if(!i&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const e={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(e.userData=this.userData),i||(t.textures[this.uuid]=e),e}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==300)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case 1e3:t.x=t.x-Math.floor(t.x);break;case 1001:t.x=t.x<0?0:1;break;case 1002:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case 1e3:t.y=t.y-Math.floor(t.y);break;case 1001:t.y=t.y<0?0:1;break;case 1002:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}lt.DEFAULT_IMAGE=null,lt.DEFAULT_MAPPING=300,lt.DEFAULT_ANISOTROPY=1;class Ut{constructor(t=0,i=0,e=0,s=1){Ut.prototype.isVector4=!0,this.x=t,this.y=i,this.z=e,this.w=s}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,i,e,s){return this.x=t,this.y=i,this.z=e,this.w=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,i){switch(t){case 0:this.x=i;break;case 1:this.y=i;break;case 2:this.z=i;break;case 3:this.w=i;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this.z=t.z+i.z,this.w=t.w+i.w,this}addScaledVector(t,i){return this.x+=t.x*i,this.y+=t.y*i,this.z+=t.z*i,this.w+=t.w*i,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this.z=t.z-i.z,this.w=t.w-i.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const i=this.x,e=this.y,s=this.z,n=this.w,r=t.elements;return this.x=r[0]*i+r[4]*e+r[8]*s+r[12]*n,this.y=r[1]*i+r[5]*e+r[9]*s+r[13]*n,this.z=r[2]*i+r[6]*e+r[10]*s+r[14]*n,this.w=r[3]*i+r[7]*e+r[11]*s+r[15]*n,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const i=Math.sqrt(1-t.w*t.w);return i<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/i,this.y=t.y/i,this.z=t.z/i),this}setAxisAngleFromRotationMatrix(t){let i,e,s,n;const h=t.elements,o=h[0],l=h[4],c=h[8],u=h[1],d=h[5],p=h[9],f=h[2],y=h[6],g=h[10];if(Math.abs(l-u)<.01&&Math.abs(c-f)<.01&&Math.abs(p-y)<.01){if(Math.abs(l+u)<.1&&Math.abs(c+f)<.1&&Math.abs(p+y)<.1&&Math.abs(o+d+g-3)<.1)return this.set(1,0,0,0),this;i=Math.PI;const _=(o+1)/2,M=(d+1)/2,w=(g+1)/2,A=(l+u)/4,b=(c+f)/4,z=(p+y)/4;return _>M&&_>w?_<.01?(e=0,s=.707106781,n=.707106781):(e=Math.sqrt(_),s=A/e,n=b/e):M>w?M<.01?(e=.707106781,s=0,n=.707106781):(s=Math.sqrt(M),e=A/s,n=z/s):w<.01?(e=.707106781,s=.707106781,n=0):(n=Math.sqrt(w),e=b/n,s=z/n),this.set(e,s,n,i),this}let S=Math.sqrt((y-p)*(y-p)+(c-f)*(c-f)+(u-l)*(u-l));return Math.abs(S)<.001&&(S=1),this.x=(y-p)/S,this.y=(c-f)/S,this.z=(u-l)/S,this.w=Math.acos((o+d+g-1)/2),this}setFromMatrixPosition(t){const i=t.elements;return this.x=i[12],this.y=i[13],this.z=i[14],this.w=i[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this.z=Math.max(t.z,Math.min(i.z,this.z)),this.w=Math.max(t.w,Math.min(i.w,this.w)),this}clampScalar(t,i){return this.x=Math.max(t,Math.min(i,this.x)),this.y=Math.max(t,Math.min(i,this.y)),this.z=Math.max(t,Math.min(i,this.z)),this.w=Math.max(t,Math.min(i,this.w)),this}clampLength(t,i){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(i,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this.z+=(t.z-this.z)*i,this.w+=(t.w-this.w)*i,this}lerpVectors(t,i,e){return this.x=t.x+(i.x-t.x)*e,this.y=t.y+(i.y-t.y)*e,this.z=t.z+(i.z-t.z)*e,this.w=t.w+(i.w-t.w)*e,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,i=0){return this.x=t[i],this.y=t[i+1],this.z=t[i+2],this.w=t[i+3],this}toArray(t=[],i=0){return t[i]=this.x,t[i+1]=this.y,t[i+2]=this.z,t[i+3]=this.w,t}fromBufferAttribute(t,i){return this.x=t.getX(i),this.y=t.getY(i),this.z=t.getZ(i),this.w=t.getW(i),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Vt{constructor(t=0,i=0,e=0,s=1){this.isQuaternion=!0,this._x=t,this._y=i,this._z=e,this._w=s}static slerpFlat(t,i,e,s,n,r,a){let h=e[s+0],o=e[s+1],l=e[s+2],c=e[s+3];const u=n[r+0],d=n[r+1],p=n[r+2],f=n[r+3];if(a===0){t[i+0]=h,t[i+1]=o,t[i+2]=l,t[i+3]=c;return}if(a===1){t[i+0]=u,t[i+1]=d,t[i+2]=p,t[i+3]=f;return}if(c!==f||h!==u||o!==d||l!==p){let y=1-a;const g=h*u+o*d+l*p+c*f,S=g>=0?1:-1,_=1-g*g;if(_>Number.EPSILON){const w=Math.sqrt(_),A=Math.atan2(w,g*S);y=Math.sin(y*A)/w,a=Math.sin(a*A)/w}const M=a*S;if(h=h*y+u*M,o=o*y+d*M,l=l*y+p*M,c=c*y+f*M,y===1-a){const w=1/Math.sqrt(h*h+o*o+l*l+c*c);h*=w,o*=w,l*=w,c*=w}}t[i]=h,t[i+1]=o,t[i+2]=l,t[i+3]=c}static multiplyQuaternionsFlat(t,i,e,s,n,r){const a=e[s],h=e[s+1],o=e[s+2],l=e[s+3],c=n[r],u=n[r+1],d=n[r+2],p=n[r+3];return t[i]=a*p+l*c+h*d-o*u,t[i+1]=h*p+l*u+o*c-a*d,t[i+2]=o*p+l*d+a*u-h*c,t[i+3]=l*p-a*c-h*u-o*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,i,e,s){return this._x=t,this._y=i,this._z=e,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,i=!0){const e=t._x,s=t._y,n=t._z,r=t._order,a=Math.cos,h=Math.sin,o=a(e/2),l=a(s/2),c=a(n/2),u=h(e/2),d=h(s/2),p=h(n/2);switch(r){case"XYZ":this._x=u*l*c+o*d*p,this._y=o*d*c-u*l*p,this._z=o*l*p+u*d*c,this._w=o*l*c-u*d*p;break;case"YXZ":this._x=u*l*c+o*d*p,this._y=o*d*c-u*l*p,this._z=o*l*p-u*d*c,this._w=o*l*c+u*d*p;break;case"ZXY":this._x=u*l*c-o*d*p,this._y=o*d*c+u*l*p,this._z=o*l*p+u*d*c,this._w=o*l*c-u*d*p;break;case"ZYX":this._x=u*l*c-o*d*p,this._y=o*d*c+u*l*p,this._z=o*l*p-u*d*c,this._w=o*l*c+u*d*p;break;case"YZX":this._x=u*l*c+o*d*p,this._y=o*d*c+u*l*p,this._z=o*l*p-u*d*c,this._w=o*l*c-u*d*p;break;case"XZY":this._x=u*l*c-o*d*p,this._y=o*d*c-u*l*p,this._z=o*l*p+u*d*c,this._w=o*l*c+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return i===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,i){const e=i/2,s=Math.sin(e);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(e),this._onChangeCallback(),this}setFromRotationMatrix(t){const i=t.elements,e=i[0],s=i[4],n=i[8],r=i[1],a=i[5],h=i[9],o=i[2],l=i[6],c=i[10],u=e+a+c;if(u>0){const d=.5/Math.sqrt(u+1);this._w=.25/d,this._x=(l-h)*d,this._y=(n-o)*d,this._z=(r-s)*d}else if(e>a&&e>c){const d=2*Math.sqrt(1+e-a-c);this._w=(l-h)/d,this._x=.25*d,this._y=(s+r)/d,this._z=(n+o)/d}else if(a>c){const d=2*Math.sqrt(1+a-e-c);this._w=(n-o)/d,this._x=(s+r)/d,this._y=.25*d,this._z=(h+l)/d}else{const d=2*Math.sqrt(1+c-e-a);this._w=(r-s)/d,this._x=(n+o)/d,this._y=(h+l)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,i){let e=t.dot(i)+1;return e<Number.EPSILON?(e=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=e):(this._x=0,this._y=-t.z,this._z=t.y,this._w=e)):(this._x=t.y*i.z-t.z*i.y,this._y=t.z*i.x-t.x*i.z,this._z=t.x*i.y-t.y*i.x,this._w=e),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(N(this.dot(t),-1,1)))}rotateTowards(t,i){const e=this.angleTo(t);if(e===0)return this;const s=Math.min(1,i/e);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,i){const e=t._x,s=t._y,n=t._z,r=t._w,a=i._x,h=i._y,o=i._z,l=i._w;return this._x=e*l+r*a+s*o-n*h,this._y=s*l+r*h+n*a-e*o,this._z=n*l+r*o+e*h-s*a,this._w=r*l-e*a-s*h-n*o,this._onChangeCallback(),this}slerp(t,i){if(i===0)return this;if(i===1)return this.copy(t);const e=this._x,s=this._y,n=this._z,r=this._w;let a=r*t._w+e*t._x+s*t._y+n*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=r,this._x=e,this._y=s,this._z=n,this;const h=1-a*a;if(h<=Number.EPSILON){const d=1-i;return this._w=d*r+i*this._w,this._x=d*e+i*this._x,this._y=d*s+i*this._y,this._z=d*n+i*this._z,this.normalize(),this}const o=Math.sqrt(h),l=Math.atan2(o,a),c=Math.sin((1-i)*l)/o,u=Math.sin(i*l)/o;return this._w=r*c+this._w*u,this._x=e*c+this._x*u,this._y=s*c+this._y*u,this._z=n*c+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,i,e){return this.copy(t).slerp(i,e)}random(){const t=2*Math.PI*Math.random(),i=2*Math.PI*Math.random(),e=Math.random(),s=Math.sqrt(1-e),n=Math.sqrt(e);return this.set(s*Math.sin(t),s*Math.cos(t),n*Math.sin(i),n*Math.cos(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,i=0){return this._x=t[i],this._y=t[i+1],this._z=t[i+2],this._w=t[i+3],this._onChangeCallback(),this}toArray(t=[],i=0){return t[i]=this._x,t[i+1]=this._y,t[i+2]=this._z,t[i+3]=this._w,t}fromBufferAttribute(t,i){return this._x=t.getX(i),this._y=t.getY(i),this._z=t.getZ(i),this._w=t.getW(i),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class x{constructor(t=0,i=0,e=0){x.prototype.isVector3=!0,this.x=t,this.y=i,this.z=e}set(t,i,e){return e===void 0&&(e=this.z),this.x=t,this.y=i,this.z=e,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,i){switch(t){case 0:this.x=i;break;case 1:this.y=i;break;case 2:this.z=i;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this.z=t.z+i.z,this}addScaledVector(t,i){return this.x+=t.x*i,this.y+=t.y*i,this.z+=t.z*i,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this.z=t.z-i.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,i){return this.x=t.x*i.x,this.y=t.y*i.y,this.z=t.z*i.z,this}applyEuler(t){return this.applyQuaternion($i.setFromEuler(t))}applyAxisAngle(t,i){return this.applyQuaternion($i.setFromAxisAngle(t,i))}applyMatrix3(t){const i=this.x,e=this.y,s=this.z,n=t.elements;return this.x=n[0]*i+n[3]*e+n[6]*s,this.y=n[1]*i+n[4]*e+n[7]*s,this.z=n[2]*i+n[5]*e+n[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const i=this.x,e=this.y,s=this.z,n=t.elements,r=1/(n[3]*i+n[7]*e+n[11]*s+n[15]);return this.x=(n[0]*i+n[4]*e+n[8]*s+n[12])*r,this.y=(n[1]*i+n[5]*e+n[9]*s+n[13])*r,this.z=(n[2]*i+n[6]*e+n[10]*s+n[14])*r,this}applyQuaternion(t){const i=this.x,e=this.y,s=this.z,n=t.x,r=t.y,a=t.z,h=t.w,o=2*(r*s-a*e),l=2*(a*i-n*s),c=2*(n*e-r*i);return this.x=i+h*o+r*c-a*l,this.y=e+h*l+a*o-n*c,this.z=s+h*c+n*l-r*o,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const i=this.x,e=this.y,s=this.z,n=t.elements;return this.x=n[0]*i+n[4]*e+n[8]*s,this.y=n[1]*i+n[5]*e+n[9]*s,this.z=n[2]*i+n[6]*e+n[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this.z=Math.max(t.z,Math.min(i.z,this.z)),this}clampScalar(t,i){return this.x=Math.max(t,Math.min(i,this.x)),this.y=Math.max(t,Math.min(i,this.y)),this.z=Math.max(t,Math.min(i,this.z)),this}clampLength(t,i){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(i,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this.z+=(t.z-this.z)*i,this}lerpVectors(t,i,e){return this.x=t.x+(i.x-t.x)*e,this.y=t.y+(i.y-t.y)*e,this.z=t.z+(i.z-t.z)*e,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,i){const e=t.x,s=t.y,n=t.z,r=i.x,a=i.y,h=i.z;return this.x=s*h-n*a,this.y=n*r-e*h,this.z=e*a-s*r,this}projectOnVector(t){const i=t.lengthSq();if(i===0)return this.set(0,0,0);const e=t.dot(this)/i;return this.copy(t).multiplyScalar(e)}projectOnPlane(t){return zi.copy(this).projectOnVector(t),this.sub(zi)}reflect(t){return this.sub(zi.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const i=Math.sqrt(this.lengthSq()*t.lengthSq());if(i===0)return Math.PI/2;const e=this.dot(t)/i;return Math.acos(N(e,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const i=this.x-t.x,e=this.y-t.y,s=this.z-t.z;return i*i+e*e+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,i,e){const s=Math.sin(i)*t;return this.x=s*Math.sin(e),this.y=Math.cos(i)*t,this.z=s*Math.cos(e),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,i,e){return this.x=t*Math.sin(i),this.y=e,this.z=t*Math.cos(i),this}setFromMatrixPosition(t){const i=t.elements;return this.x=i[12],this.y=i[13],this.z=i[14],this}setFromMatrixScale(t){const i=this.setFromMatrixColumn(t,0).length(),e=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=i,this.y=e,this.z=s,this}setFromMatrixColumn(t,i){return this.fromArray(t.elements,i*4)}setFromMatrix3Column(t,i){return this.fromArray(t.elements,i*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,i=0){return this.x=t[i],this.y=t[i+1],this.z=t[i+2],this}toArray(t=[],i=0){return t[i]=this.x,t[i+1]=this.y,t[i+2]=this.z,t}fromBufferAttribute(t,i){return this.x=t.getX(i),this.y=t.getY(i),this.z=t.getZ(i),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,i=Math.random()*2-1,e=Math.sqrt(1-i*i);return this.x=e*Math.cos(t),this.y=i,this.z=e*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const zi=new x,$i=new Vt;class vt{constructor(t=new x(1/0,1/0,1/0),i=new x(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=i}set(t,i){return this.min.copy(t),this.max.copy(i),this}setFromArray(t){this.makeEmpty();for(let i=0,e=t.length;i<e;i+=3)this.expandByPoint(W.fromArray(t,i));return this}setFromBufferAttribute(t){this.makeEmpty();for(let i=0,e=t.count;i<e;i++)this.expandByPoint(W.fromBufferAttribute(t,i));return this}setFromPoints(t){this.makeEmpty();for(let i=0,e=t.length;i<e;i++)this.expandByPoint(t[i]);return this}setFromCenterAndSize(t,i){const e=W.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(e),this.max.copy(t).add(e),this}setFromObject(t,i=!1){return this.makeEmpty(),this.expandByObject(t,i)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,i=!1){t.updateWorldMatrix(!1,!1);const e=t.geometry;if(e!==void 0){const n=e.getAttribute("position");if(i===!0&&n!==void 0&&t.isInstancedMesh!==!0)for(let r=0,a=n.count;r<a;r++)t.isMesh===!0?t.getVertexPosition(r,W):W.fromBufferAttribute(n,r),W.applyMatrix4(t.matrixWorld),this.expandByPoint(W);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),Zt.copy(t.boundingBox)):(e.boundingBox===null&&e.computeBoundingBox(),Zt.copy(e.boundingBox)),Zt.applyMatrix4(t.matrixWorld),this.union(Zt)}const s=t.children;for(let n=0,r=s.length;n<r;n++)this.expandByObject(s[n],i);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,i){return i.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,W),W.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let i,e;return t.normal.x>0?(i=t.normal.x*this.min.x,e=t.normal.x*this.max.x):(i=t.normal.x*this.max.x,e=t.normal.x*this.min.x),t.normal.y>0?(i+=t.normal.y*this.min.y,e+=t.normal.y*this.max.y):(i+=t.normal.y*this.max.y,e+=t.normal.y*this.min.y),t.normal.z>0?(i+=t.normal.z*this.min.z,e+=t.normal.z*this.max.z):(i+=t.normal.z*this.max.z,e+=t.normal.z*this.min.z),i<=-t.constant&&e>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Xt),Yt.subVectors(this.max,Xt),zt.subVectors(t.a,Xt),_t.subVectors(t.b,Xt),At.subVectors(t.c,Xt),ct.subVectors(_t,zt),ut.subVectors(At,_t),xt.subVectors(zt,At);let i=[0,-ct.z,ct.y,0,-ut.z,ut.y,0,-xt.z,xt.y,ct.z,0,-ct.x,ut.z,0,-ut.x,xt.z,0,-xt.x,-ct.y,ct.x,0,-ut.y,ut.x,0,-xt.y,xt.x,0];return!_i(i,zt,_t,At,Yt)||(i=[1,0,0,0,1,0,0,0,1],!_i(i,zt,_t,At,Yt))?!1:(Kt.crossVectors(ct,ut),i=[Kt.x,Kt.y,Kt.z],_i(i,zt,_t,At,Yt))}clampPoint(t,i){return i.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,W).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(W).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(tt[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),tt[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),tt[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),tt[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),tt[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),tt[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),tt[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),tt[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(tt),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const tt=[new x,new x,new x,new x,new x,new x,new x,new x],W=new x,Zt=new vt,zt=new x,_t=new x,At=new x,ct=new x,ut=new x,xt=new x,Xt=new x,Yt=new x,Kt=new x,yt=new x;function _i(m,t,i,e,s){for(let n=0,r=m.length-3;n<=r;n+=3){yt.fromArray(m,n);const a=s.x*Math.abs(yt.x)+s.y*Math.abs(yt.y)+s.z*Math.abs(yt.z),h=t.dot(yt),o=i.dot(yt),l=e.dot(yt);if(Math.max(-Math.max(h,o,l),Math.min(h,o,l))>a)return!1}return!0}const _e=new vt,qt=new x,Ai=new x;class Qi{constructor(t=new x,i=-1){this.isSphere=!0,this.center=t,this.radius=i}set(t,i){return this.center.copy(t),this.radius=i,this}setFromPoints(t,i){const e=this.center;i!==void 0?e.copy(i):_e.setFromPoints(t).getCenter(e);let s=0;for(let n=0,r=t.length;n<r;n++)s=Math.max(s,e.distanceToSquared(t[n]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const i=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=i*i}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,i){const e=this.center.distanceToSquared(t);return i.copy(t),e>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;qt.subVectors(t,this.center);const i=qt.lengthSq();if(i>this.radius*this.radius){const e=Math.sqrt(i),s=(e-this.radius)*.5;this.center.addScaledVector(qt,s/e),this.radius+=s}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Ai.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(qt.copy(t.center).add(Ai)),this.expandByPoint(qt.copy(t.center).sub(Ai))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const it=new x,Fi=new x,$t=new x,dt=new x,Ci=new x,Qt=new x,Ti=new x;class Ae{constructor(t=new x,i=new x(0,0,-1)){this.origin=t,this.direction=i}set(t,i){return this.origin.copy(t),this.direction.copy(i),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,i){return i.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,it)),this}closestPointToPoint(t,i){i.subVectors(t,this.origin);const e=i.dot(this.direction);return e<0?i.copy(this.origin):i.copy(this.origin).addScaledVector(this.direction,e)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const i=it.subVectors(t,this.origin).dot(this.direction);return i<0?this.origin.distanceToSquared(t):(it.copy(this.origin).addScaledVector(this.direction,i),it.distanceToSquared(t))}distanceSqToSegment(t,i,e,s){Fi.copy(t).add(i).multiplyScalar(.5),$t.copy(i).sub(t).normalize(),dt.copy(this.origin).sub(Fi);const n=t.distanceTo(i)*.5,r=-this.direction.dot($t),a=dt.dot(this.direction),h=-dt.dot($t),o=dt.lengthSq(),l=Math.abs(1-r*r);let c,u,d,p;if(l>0)if(c=r*h-a,u=r*a-h,p=n*l,c>=0)if(u>=-p)if(u<=p){const f=1/l;c*=f,u*=f,d=c*(c+r*u+2*a)+u*(r*c+u+2*h)+o}else u=n,c=Math.max(0,-(r*u+a)),d=-c*c+u*(u+2*h)+o;else u=-n,c=Math.max(0,-(r*u+a)),d=-c*c+u*(u+2*h)+o;else u<=-p?(c=Math.max(0,-(-r*n+a)),u=c>0?-n:Math.min(Math.max(-n,-h),n),d=-c*c+u*(u+2*h)+o):u<=p?(c=0,u=Math.min(Math.max(-n,-h),n),d=u*(u+2*h)+o):(c=Math.max(0,-(r*n+a)),u=c>0?n:Math.min(Math.max(-n,-h),n),d=-c*c+u*(u+2*h)+o);else u=r>0?-n:n,c=Math.max(0,-(r*u+a)),d=-c*c+u*(u+2*h)+o;return e&&e.copy(this.origin).addScaledVector(this.direction,c),s&&s.copy(Fi).addScaledVector($t,u),d}intersectSphere(t,i){it.subVectors(t.center,this.origin);const e=it.dot(this.direction),s=it.dot(it)-e*e,n=t.radius*t.radius;if(s>n)return null;const r=Math.sqrt(n-s),a=e-r,h=e+r;return h<0?null:a<0?this.at(h,i):this.at(a,i)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const i=t.normal.dot(this.direction);if(i===0)return t.distanceToPoint(this.origin)===0?0:null;const e=-(this.origin.dot(t.normal)+t.constant)/i;return e>=0?e:null}intersectPlane(t,i){const e=this.distanceToPlane(t);return e===null?null:this.at(e,i)}intersectsPlane(t){const i=t.distanceToPoint(this.origin);return i===0||t.normal.dot(this.direction)*i<0}intersectBox(t,i){let e,s,n,r,a,h;const o=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,u=this.origin;return o>=0?(e=(t.min.x-u.x)*o,s=(t.max.x-u.x)*o):(e=(t.max.x-u.x)*o,s=(t.min.x-u.x)*o),l>=0?(n=(t.min.y-u.y)*l,r=(t.max.y-u.y)*l):(n=(t.max.y-u.y)*l,r=(t.min.y-u.y)*l),e>r||n>s||((n>e||isNaN(e))&&(e=n),(r<s||isNaN(s))&&(s=r),c>=0?(a=(t.min.z-u.z)*c,h=(t.max.z-u.z)*c):(a=(t.max.z-u.z)*c,h=(t.min.z-u.z)*c),e>h||a>s)||((a>e||e!==e)&&(e=a),(h<s||s!==s)&&(s=h),s<0)?null:this.at(e>=0?e:s,i)}intersectsBox(t){return this.intersectBox(t,it)!==null}intersectTriangle(t,i,e,s,n){Ci.subVectors(i,t),Qt.subVectors(e,t),Ti.crossVectors(Ci,Qt);let r=this.direction.dot(Ti),a;if(r>0){if(s)return null;a=1}else if(r<0)a=-1,r=-r;else return null;dt.subVectors(this.origin,t);const h=a*this.direction.dot(Qt.crossVectors(dt,Qt));if(h<0)return null;const o=a*this.direction.dot(Ci.cross(dt));if(o<0||h+o>r)return null;const l=-a*dt.dot(Ti);return l<0?null:this.at(l/r,n)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class G{constructor(t,i,e,s,n,r,a,h,o,l,c,u,d,p,f,y){G.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,i,e,s,n,r,a,h,o,l,c,u,d,p,f,y)}set(t,i,e,s,n,r,a,h,o,l,c,u,d,p,f,y){const g=this.elements;return g[0]=t,g[4]=i,g[8]=e,g[12]=s,g[1]=n,g[5]=r,g[9]=a,g[13]=h,g[2]=o,g[6]=l,g[10]=c,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new G().fromArray(this.elements)}copy(t){const i=this.elements,e=t.elements;return i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=e[3],i[4]=e[4],i[5]=e[5],i[6]=e[6],i[7]=e[7],i[8]=e[8],i[9]=e[9],i[10]=e[10],i[11]=e[11],i[12]=e[12],i[13]=e[13],i[14]=e[14],i[15]=e[15],this}copyPosition(t){const i=this.elements,e=t.elements;return i[12]=e[12],i[13]=e[13],i[14]=e[14],this}setFromMatrix3(t){const i=t.elements;return this.set(i[0],i[3],i[6],0,i[1],i[4],i[7],0,i[2],i[5],i[8],0,0,0,0,1),this}extractBasis(t,i,e){return t.setFromMatrixColumn(this,0),i.setFromMatrixColumn(this,1),e.setFromMatrixColumn(this,2),this}makeBasis(t,i,e){return this.set(t.x,i.x,e.x,0,t.y,i.y,e.y,0,t.z,i.z,e.z,0,0,0,0,1),this}extractRotation(t){const i=this.elements,e=t.elements,s=1/Ft.setFromMatrixColumn(t,0).length(),n=1/Ft.setFromMatrixColumn(t,1).length(),r=1/Ft.setFromMatrixColumn(t,2).length();return i[0]=e[0]*s,i[1]=e[1]*s,i[2]=e[2]*s,i[3]=0,i[4]=e[4]*n,i[5]=e[5]*n,i[6]=e[6]*n,i[7]=0,i[8]=e[8]*r,i[9]=e[9]*r,i[10]=e[10]*r,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}makeRotationFromEuler(t){const i=this.elements,e=t.x,s=t.y,n=t.z,r=Math.cos(e),a=Math.sin(e),h=Math.cos(s),o=Math.sin(s),l=Math.cos(n),c=Math.sin(n);if(t.order==="XYZ"){const u=r*l,d=r*c,p=a*l,f=a*c;i[0]=h*l,i[4]=-h*c,i[8]=o,i[1]=d+p*o,i[5]=u-f*o,i[9]=-a*h,i[2]=f-u*o,i[6]=p+d*o,i[10]=r*h}else if(t.order==="YXZ"){const u=h*l,d=h*c,p=o*l,f=o*c;i[0]=u+f*a,i[4]=p*a-d,i[8]=r*o,i[1]=r*c,i[5]=r*l,i[9]=-a,i[2]=d*a-p,i[6]=f+u*a,i[10]=r*h}else if(t.order==="ZXY"){const u=h*l,d=h*c,p=o*l,f=o*c;i[0]=u-f*a,i[4]=-r*c,i[8]=p+d*a,i[1]=d+p*a,i[5]=r*l,i[9]=f-u*a,i[2]=-r*o,i[6]=a,i[10]=r*h}else if(t.order==="ZYX"){const u=r*l,d=r*c,p=a*l,f=a*c;i[0]=h*l,i[4]=p*o-d,i[8]=u*o+f,i[1]=h*c,i[5]=f*o+u,i[9]=d*o-p,i[2]=-o,i[6]=a*h,i[10]=r*h}else if(t.order==="YZX"){const u=r*h,d=r*o,p=a*h,f=a*o;i[0]=h*l,i[4]=f-u*c,i[8]=p*c+d,i[1]=c,i[5]=r*l,i[9]=-a*l,i[2]=-o*l,i[6]=d*c+p,i[10]=u-f*c}else if(t.order==="XZY"){const u=r*h,d=r*o,p=a*h,f=a*o;i[0]=h*l,i[4]=-c,i[8]=o*l,i[1]=u*c+f,i[5]=r*l,i[9]=d*c-p,i[2]=p*c-d,i[6]=a*l,i[10]=f*c+u}return i[3]=0,i[7]=0,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Fe,t,Ce)}lookAt(t,i,e){const s=this.elements;return U.subVectors(t,i),U.lengthSq()===0&&(U.z=1),U.normalize(),pt.crossVectors(e,U),pt.lengthSq()===0&&(Math.abs(e.z)===1?U.x+=1e-4:U.z+=1e-4,U.normalize(),pt.crossVectors(e,U)),pt.normalize(),jt.crossVectors(U,pt),s[0]=pt.x,s[4]=jt.x,s[8]=U.x,s[1]=pt.y,s[5]=jt.y,s[9]=U.y,s[2]=pt.z,s[6]=jt.z,s[10]=U.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,i){const e=t.elements,s=i.elements,n=this.elements,r=e[0],a=e[4],h=e[8],o=e[12],l=e[1],c=e[5],u=e[9],d=e[13],p=e[2],f=e[6],y=e[10],g=e[14],S=e[3],_=e[7],M=e[11],w=e[15],A=s[0],b=s[4],z=s[8],T=s[12],E=s[1],R=s[5],$=s[9],k=s[13],Q=s[2],j=s[6],Pt=s[10],bt=s[14],ft=s[3],P=s[7],O=s[11],v=s[15];return n[0]=r*A+a*E+h*Q+o*ft,n[4]=r*b+a*R+h*j+o*P,n[8]=r*z+a*$+h*Pt+o*O,n[12]=r*T+a*k+h*bt+o*v,n[1]=l*A+c*E+u*Q+d*ft,n[5]=l*b+c*R+u*j+d*P,n[9]=l*z+c*$+u*Pt+d*O,n[13]=l*T+c*k+u*bt+d*v,n[2]=p*A+f*E+y*Q+g*ft,n[6]=p*b+f*R+y*j+g*P,n[10]=p*z+f*$+y*Pt+g*O,n[14]=p*T+f*k+y*bt+g*v,n[3]=S*A+_*E+M*Q+w*ft,n[7]=S*b+_*R+M*j+w*P,n[11]=S*z+_*$+M*Pt+w*O,n[15]=S*T+_*k+M*bt+w*v,this}multiplyScalar(t){const i=this.elements;return i[0]*=t,i[4]*=t,i[8]*=t,i[12]*=t,i[1]*=t,i[5]*=t,i[9]*=t,i[13]*=t,i[2]*=t,i[6]*=t,i[10]*=t,i[14]*=t,i[3]*=t,i[7]*=t,i[11]*=t,i[15]*=t,this}determinant(){const t=this.elements,i=t[0],e=t[4],s=t[8],n=t[12],r=t[1],a=t[5],h=t[9],o=t[13],l=t[2],c=t[6],u=t[10],d=t[14],p=t[3],f=t[7],y=t[11],g=t[15];return p*(+n*h*c-s*o*c-n*a*u+e*o*u+s*a*d-e*h*d)+f*(+i*h*d-i*o*u+n*r*u-s*r*d+s*o*l-n*h*l)+y*(+i*o*c-i*a*d-n*r*c+e*r*d+n*a*l-e*o*l)+g*(-s*a*l-i*h*c+i*a*u+s*r*c-e*r*u+e*h*l)}transpose(){const t=this.elements;let i;return i=t[1],t[1]=t[4],t[4]=i,i=t[2],t[2]=t[8],t[8]=i,i=t[6],t[6]=t[9],t[9]=i,i=t[3],t[3]=t[12],t[12]=i,i=t[7],t[7]=t[13],t[13]=i,i=t[11],t[11]=t[14],t[14]=i,this}setPosition(t,i,e){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=i,s[14]=e),this}invert(){const t=this.elements,i=t[0],e=t[1],s=t[2],n=t[3],r=t[4],a=t[5],h=t[6],o=t[7],l=t[8],c=t[9],u=t[10],d=t[11],p=t[12],f=t[13],y=t[14],g=t[15],S=c*y*o-f*u*o+f*h*d-a*y*d-c*h*g+a*u*g,_=p*u*o-l*y*o-p*h*d+r*y*d+l*h*g-r*u*g,M=l*f*o-p*c*o+p*a*d-r*f*d-l*a*g+r*c*g,w=p*c*h-l*f*h-p*a*u+r*f*u+l*a*y-r*c*y,A=i*S+e*_+s*M+n*w;if(A===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/A;return t[0]=S*b,t[1]=(f*u*n-c*y*n-f*s*d+e*y*d+c*s*g-e*u*g)*b,t[2]=(a*y*n-f*h*n+f*s*o-e*y*o-a*s*g+e*h*g)*b,t[3]=(c*h*n-a*u*n-c*s*o+e*u*o+a*s*d-e*h*d)*b,t[4]=_*b,t[5]=(l*y*n-p*u*n+p*s*d-i*y*d-l*s*g+i*u*g)*b,t[6]=(p*h*n-r*y*n-p*s*o+i*y*o+r*s*g-i*h*g)*b,t[7]=(r*u*n-l*h*n+l*s*o-i*u*o-r*s*d+i*h*d)*b,t[8]=M*b,t[9]=(p*c*n-l*f*n-p*e*d+i*f*d+l*e*g-i*c*g)*b,t[10]=(r*f*n-p*a*n+p*e*o-i*f*o-r*e*g+i*a*g)*b,t[11]=(l*a*n-r*c*n-l*e*o+i*c*o+r*e*d-i*a*d)*b,t[12]=w*b,t[13]=(l*f*s-p*c*s+p*e*u-i*f*u-l*e*y+i*c*y)*b,t[14]=(p*a*s-r*f*s-p*e*h+i*f*h+r*e*y-i*a*y)*b,t[15]=(r*c*s-l*a*s+l*e*h-i*c*h-r*e*u+i*a*u)*b,this}scale(t){const i=this.elements,e=t.x,s=t.y,n=t.z;return i[0]*=e,i[4]*=s,i[8]*=n,i[1]*=e,i[5]*=s,i[9]*=n,i[2]*=e,i[6]*=s,i[10]*=n,i[3]*=e,i[7]*=s,i[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,i=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],e=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(i,e,s))}makeTranslation(t,i,e){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,i,0,0,1,e,0,0,0,1),this}makeRotationX(t){const i=Math.cos(t),e=Math.sin(t);return this.set(1,0,0,0,0,i,-e,0,0,e,i,0,0,0,0,1),this}makeRotationY(t){const i=Math.cos(t),e=Math.sin(t);return this.set(i,0,e,0,0,1,0,0,-e,0,i,0,0,0,0,1),this}makeRotationZ(t){const i=Math.cos(t),e=Math.sin(t);return this.set(i,-e,0,0,e,i,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,i){const e=Math.cos(i),s=Math.sin(i),n=1-e,r=t.x,a=t.y,h=t.z,o=n*r,l=n*a;return this.set(o*r+e,o*a-s*h,o*h+s*a,0,o*a+s*h,l*a+e,l*h-s*r,0,o*h-s*a,l*h+s*r,n*h*h+e,0,0,0,0,1),this}makeScale(t,i,e){return this.set(t,0,0,0,0,i,0,0,0,0,e,0,0,0,0,1),this}makeShear(t,i,e,s,n,r){return this.set(1,e,n,0,t,1,r,0,i,s,1,0,0,0,0,1),this}compose(t,i,e){const s=this.elements,n=i._x,r=i._y,a=i._z,h=i._w,o=n+n,l=r+r,c=a+a,u=n*o,d=n*l,p=n*c,f=r*l,y=r*c,g=a*c,S=h*o,_=h*l,M=h*c,w=e.x,A=e.y,b=e.z;return s[0]=(1-(f+g))*w,s[1]=(d+M)*w,s[2]=(p-_)*w,s[3]=0,s[4]=(d-M)*A,s[5]=(1-(u+g))*A,s[6]=(y+S)*A,s[7]=0,s[8]=(p+_)*b,s[9]=(y-S)*b,s[10]=(1-(u+f))*b,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,i,e){const s=this.elements;let n=Ft.set(s[0],s[1],s[2]).length();const r=Ft.set(s[4],s[5],s[6]).length(),a=Ft.set(s[8],s[9],s[10]).length();this.determinant()<0&&(n=-n),t.x=s[12],t.y=s[13],t.z=s[14],J.copy(this);const o=1/n,l=1/r,c=1/a;return J.elements[0]*=o,J.elements[1]*=o,J.elements[2]*=o,J.elements[4]*=l,J.elements[5]*=l,J.elements[6]*=l,J.elements[8]*=c,J.elements[9]*=c,J.elements[10]*=c,i.setFromRotationMatrix(J),e.x=n,e.y=r,e.z=a,this}makePerspective(t,i,e,s,n,r,a=2e3){const h=this.elements,o=2*n/(i-t),l=2*n/(e-s),c=(i+t)/(i-t),u=(e+s)/(e-s);let d,p;if(a===2e3)d=-(r+n)/(r-n),p=-2*r*n/(r-n);else if(a===2001)d=-r/(r-n),p=-r*n/(r-n);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return h[0]=o,h[4]=0,h[8]=c,h[12]=0,h[1]=0,h[5]=l,h[9]=u,h[13]=0,h[2]=0,h[6]=0,h[10]=d,h[14]=p,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,i,e,s,n,r,a=2e3){const h=this.elements,o=1/(i-t),l=1/(e-s),c=1/(r-n),u=(i+t)*o,d=(e+s)*l;let p,f;if(a===2e3)p=(r+n)*c,f=-2*c;else if(a===2001)p=n*c,f=-1*c;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return h[0]=2*o,h[4]=0,h[8]=0,h[12]=-u,h[1]=0,h[5]=2*l,h[9]=0,h[13]=-d,h[2]=0,h[6]=0,h[10]=f,h[14]=-p,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){const i=this.elements,e=t.elements;for(let s=0;s<16;s++)if(i[s]!==e[s])return!1;return!0}fromArray(t,i=0){for(let e=0;e<16;e++)this.elements[e]=t[e+i];return this}toArray(t=[],i=0){const e=this.elements;return t[i]=e[0],t[i+1]=e[1],t[i+2]=e[2],t[i+3]=e[3],t[i+4]=e[4],t[i+5]=e[5],t[i+6]=e[6],t[i+7]=e[7],t[i+8]=e[8],t[i+9]=e[9],t[i+10]=e[10],t[i+11]=e[11],t[i+12]=e[12],t[i+13]=e[13],t[i+14]=e[14],t[i+15]=e[15],t}}const Ft=new x,J=new G,Fe=new x(0,0,0),Ce=new x(1,1,1),pt=new x,jt=new x,U=new x,ji=new G,te=new Vt;class Ht{constructor(t=0,i=0,e=0,s=Ht.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=i,this._z=e,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,i,e,s=this._order){return this._x=t,this._y=i,this._z=e,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,i=this._order,e=!0){const s=t.elements,n=s[0],r=s[4],a=s[8],h=s[1],o=s[5],l=s[9],c=s[2],u=s[6],d=s[10];switch(i){case"XYZ":this._y=Math.asin(N(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,d),this._z=Math.atan2(-r,n)):(this._x=Math.atan2(u,o),this._z=0);break;case"YXZ":this._x=Math.asin(-N(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(h,o)):(this._y=Math.atan2(-c,n),this._z=0);break;case"ZXY":this._x=Math.asin(N(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-r,o)):(this._y=0,this._z=Math.atan2(h,n));break;case"ZYX":this._y=Math.asin(-N(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(h,n)):(this._x=0,this._z=Math.atan2(-r,o));break;case"YZX":this._z=Math.asin(N(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-l,o),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-N(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(u,o),this._y=Math.atan2(a,n)):(this._x=Math.atan2(-l,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+i)}return this._order=i,e===!0&&this._onChangeCallback(),this}setFromQuaternion(t,i,e){return ji.makeRotationFromQuaternion(t),this.setFromRotationMatrix(ji,i,e)}setFromVector3(t,i=this._order){return this.set(t.x,t.y,t.z,i)}reorder(t){return te.setFromEuler(this),this.setFromQuaternion(te,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],i=0){return t[i]=this._x,t[i+1]=this._y,t[i+2]=this._z,t[i+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ht.DEFAULT_ORDER="XYZ";class Te{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let Be=0;const ie=new x,Ct=new Vt,et=new G,ti=new x,Wt=new x,Ee=new x,Re=new Vt,ee=new x(1,0,0),se=new x(0,1,0),ne=new x(0,0,1),re={type:"added"},ke={type:"removed"},Tt={type:"childadded",child:null},Bi={type:"childremoved",child:null};class st extends Jt{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Be++}),this.uuid=Ot(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=st.DEFAULT_UP.clone();const t=new x,i=new Ht,e=new Vt,s=new x(1,1,1);function n(){e.setFromEuler(i,!1)}function r(){i.setFromQuaternion(e,void 0,!1)}i._onChange(n),e._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:i},quaternion:{configurable:!0,enumerable:!0,value:e},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new G},normalMatrix:{value:new ot}}),this.matrix=new G,this.matrixWorld=new G,this.matrixAutoUpdate=st.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=st.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Te,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,i){this.quaternion.setFromAxisAngle(t,i)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,i){return Ct.setFromAxisAngle(t,i),this.quaternion.multiply(Ct),this}rotateOnWorldAxis(t,i){return Ct.setFromAxisAngle(t,i),this.quaternion.premultiply(Ct),this}rotateX(t){return this.rotateOnAxis(ee,t)}rotateY(t){return this.rotateOnAxis(se,t)}rotateZ(t){return this.rotateOnAxis(ne,t)}translateOnAxis(t,i){return ie.copy(t).applyQuaternion(this.quaternion),this.position.add(ie.multiplyScalar(i)),this}translateX(t){return this.translateOnAxis(ee,t)}translateY(t){return this.translateOnAxis(se,t)}translateZ(t){return this.translateOnAxis(ne,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(et.copy(this.matrixWorld).invert())}lookAt(t,i,e){t.isVector3?ti.copy(t):ti.set(t,i,e);const s=this.parent;this.updateWorldMatrix(!0,!1),Wt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?et.lookAt(Wt,ti,this.up):et.lookAt(ti,Wt,this.up),this.quaternion.setFromRotationMatrix(et),s&&(et.extractRotation(s.matrixWorld),Ct.setFromRotationMatrix(et),this.quaternion.premultiply(Ct.invert()))}add(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.add(arguments[i]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(re),Tt.child=t,this.dispatchEvent(Tt),Tt.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const i=this.children.indexOf(t);return i!==-1&&(t.parent=null,this.children.splice(i,1),t.dispatchEvent(ke),Bi.child=t,this.dispatchEvent(Bi),Bi.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),et.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),et.multiply(t.parent.matrixWorld)),t.applyMatrix4(et),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(re),Tt.child=t,this.dispatchEvent(Tt),Tt.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,i){if(this[t]===i)return this;for(let e=0,s=this.children.length;e<s;e++){const r=this.children[e].getObjectByProperty(t,i);if(r!==void 0)return r}}getObjectsByProperty(t,i,e=[]){this[t]===i&&e.push(this);const s=this.children;for(let n=0,r=s.length;n<r;n++)s[n].getObjectsByProperty(t,i,e);return e}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Wt,t,Ee),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Wt,Re,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const i=this.matrixWorld.elements;return t.set(i[8],i[9],i[10]).normalize()}raycast(){}traverse(t){t(this);const i=this.children;for(let e=0,s=i.length;e<s;e++)i[e].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const i=this.children;for(let e=0,s=i.length;e<s;e++)i[e].traverseVisible(t)}traverseAncestors(t){const i=this.parent;i!==null&&(t(i),i.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const i=this.children;for(let e=0,s=i.length;e<s;e++)i[e].updateMatrixWorld(t)}updateWorldMatrix(t,i){const e=this.parent;if(t===!0&&e!==null&&e.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),i===!0){const s=this.children;for(let n=0,r=s.length;n<r;n++)s[n].updateWorldMatrix(!1,!0)}}toJSON(t){const i=t===void 0||typeof t=="string",e={};i&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},e.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.visibility=this._visibility,s.active=this._active,s.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),s.maxInstanceCount=this._maxInstanceCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.geometryCount=this._geometryCount,s.matricesTexture=this._matricesTexture.toJSON(t),this._colorsTexture!==null&&(s.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(s.boundingSphere={center:s.boundingSphere.center.toArray(),radius:s.boundingSphere.radius}),this.boundingBox!==null&&(s.boundingBox={min:s.boundingBox.min.toArray(),max:s.boundingBox.max.toArray()}));function n(a,h){return a[h.uuid]===void 0&&(a[h.uuid]=h.toJSON(t)),h.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=n(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const h=a.shapes;if(Array.isArray(h))for(let o=0,l=h.length;o<l;o++){const c=h[o];n(t.shapes,c)}else n(t.shapes,h)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(n(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let h=0,o=this.material.length;h<o;h++)a.push(n(t.materials,this.material[h]));s.material=a}else s.material=n(t.materials,this.material);if(this.children.length>0){s.children=[];for(let a=0;a<this.children.length;a++)s.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let a=0;a<this.animations.length;a++){const h=this.animations[a];s.animations.push(n(t.animations,h))}}if(i){const a=r(t.geometries),h=r(t.materials),o=r(t.textures),l=r(t.images),c=r(t.shapes),u=r(t.skeletons),d=r(t.animations),p=r(t.nodes);a.length>0&&(e.geometries=a),h.length>0&&(e.materials=h),o.length>0&&(e.textures=o),l.length>0&&(e.images=l),c.length>0&&(e.shapes=c),u.length>0&&(e.skeletons=u),d.length>0&&(e.animations=d),p.length>0&&(e.nodes=p)}return e.object=s,e;function r(a){const h=[];for(const o in a){const l=a[o];delete l.metadata,h.push(l)}return h}}clone(t){return new this.constructor().copy(this,t)}copy(t,i=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),i===!0)for(let e=0;e<t.children.length;e++){const s=t.children[e];this.add(s.clone())}return this}}st.DEFAULT_UP=new x(0,1,0),st.DEFAULT_MATRIX_AUTO_UPDATE=!0,st.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Z=new x,nt=new x,Ei=new x,rt=new x,Bt=new x,Et=new x,he=new x,Ri=new x,ki=new x,Pi=new x,Ii=new Ut,Di=new Ut,Oi=new Ut;class Y{constructor(t=new x,i=new x,e=new x){this.a=t,this.b=i,this.c=e}static getNormal(t,i,e,s){s.subVectors(e,i),Z.subVectors(t,i),s.cross(Z);const n=s.lengthSq();return n>0?s.multiplyScalar(1/Math.sqrt(n)):s.set(0,0,0)}static getBarycoord(t,i,e,s,n){Z.subVectors(s,i),nt.subVectors(e,i),Ei.subVectors(t,i);const r=Z.dot(Z),a=Z.dot(nt),h=Z.dot(Ei),o=nt.dot(nt),l=nt.dot(Ei),c=r*o-a*a;if(c===0)return n.set(0,0,0),null;const u=1/c,d=(o*h-a*l)*u,p=(r*l-a*h)*u;return n.set(1-d-p,p,d)}static containsPoint(t,i,e,s){return this.getBarycoord(t,i,e,s,rt)===null?!1:rt.x>=0&&rt.y>=0&&rt.x+rt.y<=1}static getInterpolation(t,i,e,s,n,r,a,h){return this.getBarycoord(t,i,e,s,rt)===null?(h.x=0,h.y=0,"z"in h&&(h.z=0),"w"in h&&(h.w=0),null):(h.setScalar(0),h.addScaledVector(n,rt.x),h.addScaledVector(r,rt.y),h.addScaledVector(a,rt.z),h)}static getInterpolatedAttribute(t,i,e,s,n,r){return Ii.setScalar(0),Di.setScalar(0),Oi.setScalar(0),Ii.fromBufferAttribute(t,i),Di.fromBufferAttribute(t,e),Oi.fromBufferAttribute(t,s),r.setScalar(0),r.addScaledVector(Ii,n.x),r.addScaledVector(Di,n.y),r.addScaledVector(Oi,n.z),r}static isFrontFacing(t,i,e,s){return Z.subVectors(e,i),nt.subVectors(t,i),Z.cross(nt).dot(s)<0}set(t,i,e){return this.a.copy(t),this.b.copy(i),this.c.copy(e),this}setFromPointsAndIndices(t,i,e,s){return this.a.copy(t[i]),this.b.copy(t[e]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,i,e,s){return this.a.fromBufferAttribute(t,i),this.b.fromBufferAttribute(t,e),this.c.fromBufferAttribute(t,s),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Z.subVectors(this.c,this.b),nt.subVectors(this.a,this.b),Z.cross(nt).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Y.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,i){return Y.getBarycoord(t,this.a,this.b,this.c,i)}getInterpolation(t,i,e,s,n){return Y.getInterpolation(t,this.a,this.b,this.c,i,e,s,n)}containsPoint(t){return Y.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Y.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,i){const e=this.a,s=this.b,n=this.c;let r,a;Bt.subVectors(s,e),Et.subVectors(n,e),Ri.subVectors(t,e);const h=Bt.dot(Ri),o=Et.dot(Ri);if(h<=0&&o<=0)return i.copy(e);ki.subVectors(t,s);const l=Bt.dot(ki),c=Et.dot(ki);if(l>=0&&c<=l)return i.copy(s);const u=h*c-l*o;if(u<=0&&h>=0&&l<=0)return r=h/(h-l),i.copy(e).addScaledVector(Bt,r);Pi.subVectors(t,n);const d=Bt.dot(Pi),p=Et.dot(Pi);if(p>=0&&d<=p)return i.copy(n);const f=d*o-h*p;if(f<=0&&o>=0&&p<=0)return a=o/(o-p),i.copy(e).addScaledVector(Et,a);const y=l*p-d*c;if(y<=0&&c-l>=0&&d-p>=0)return he.subVectors(n,s),a=(c-l)/(c-l+(d-p)),i.copy(s).addScaledVector(he,a);const g=1/(y+f+u);return r=f*g,a=u*g,i.copy(e).addScaledVector(Bt,r).addScaledVector(Et,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const ae={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},mt={h:0,s:0,l:0},ii={h:0,s:0,l:0};function Ni(m,t,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?m+(t-m)*6*i:i<1/2?t:i<2/3?m+(t-m)*6*(2/3-i):m}class ei{constructor(t,i,e){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,i,e)}set(t,i,e){if(i===void 0&&e===void 0){const s=t;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(t,i,e);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,i=K){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,H.toWorkingColorSpace(this,i),this}setRGB(t,i,e,s=H.workingColorSpace){return this.r=t,this.g=i,this.b=e,H.toWorkingColorSpace(this,s),this}setHSL(t,i,e,s=H.workingColorSpace){if(t=ye(t,1),i=N(i,0,1),e=N(e,0,1),i===0)this.r=this.g=this.b=e;else{const n=e<=.5?e*(1+i):e+i-e*i,r=2*e-n;this.r=Ni(r,n,t+1/3),this.g=Ni(r,n,t),this.b=Ni(r,n,t-1/3)}return H.toWorkingColorSpace(this,s),this}setStyle(t,i=K){function e(n){n!==void 0&&parseFloat(n)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(t)){let n;const r=s[1],a=s[2];switch(r){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return e(n[4]),this.setRGB(Math.min(255,parseInt(n[1],10))/255,Math.min(255,parseInt(n[2],10))/255,Math.min(255,parseInt(n[3],10))/255,i);if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return e(n[4]),this.setRGB(Math.min(100,parseInt(n[1],10))/100,Math.min(100,parseInt(n[2],10))/100,Math.min(100,parseInt(n[3],10))/100,i);break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return e(n[4]),this.setHSL(parseFloat(n[1])/360,parseFloat(n[2])/100,parseFloat(n[3])/100,i);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const n=s[1],r=n.length;if(r===3)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,i);if(r===6)return this.setHex(parseInt(n,16),i);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,i);return this}setColorName(t,i=K){const e=ae[t.toLowerCase()];return e!==void 0?this.setHex(e,i):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=wt(t.r),this.g=wt(t.g),this.b=wt(t.b),this}copyLinearToSRGB(t){return this.r=wi(t.r),this.g=wi(t.g),this.b=wi(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=K){return H.fromWorkingColorSpace(D.copy(this),t),Math.round(N(D.r*255,0,255))*65536+Math.round(N(D.g*255,0,255))*256+Math.round(N(D.b*255,0,255))}getHexString(t=K){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,i=H.workingColorSpace){H.fromWorkingColorSpace(D.copy(this),i);const e=D.r,s=D.g,n=D.b,r=Math.max(e,s,n),a=Math.min(e,s,n);let h,o;const l=(a+r)/2;if(a===r)h=0,o=0;else{const c=r-a;switch(o=l<=.5?c/(r+a):c/(2-r-a),r){case e:h=(s-n)/c+(s<n?6:0);break;case s:h=(n-e)/c+2;break;case n:h=(e-s)/c+4;break}h/=6}return t.h=h,t.s=o,t.l=l,t}getRGB(t,i=H.workingColorSpace){return H.fromWorkingColorSpace(D.copy(this),i),t.r=D.r,t.g=D.g,t.b=D.b,t}getStyle(t=K){H.fromWorkingColorSpace(D.copy(this),t);const i=D.r,e=D.g,s=D.b;return t!==K?`color(${t} ${i.toFixed(3)} ${e.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(i*255)},${Math.round(e*255)},${Math.round(s*255)})`}offsetHSL(t,i,e){return this.getHSL(mt),this.setHSL(mt.h+t,mt.s+i,mt.l+e)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,i){return this.r=t.r+i.r,this.g=t.g+i.g,this.b=t.b+i.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,i){return this.r+=(t.r-this.r)*i,this.g+=(t.g-this.g)*i,this.b+=(t.b-this.b)*i,this}lerpColors(t,i,e){return this.r=t.r+(i.r-t.r)*e,this.g=t.g+(i.g-t.g)*e,this.b=t.b+(i.b-t.b)*e,this}lerpHSL(t,i){this.getHSL(mt),t.getHSL(ii);const e=gi(mt.h,ii.h,i),s=gi(mt.s,ii.s,i),n=gi(mt.l,ii.l,i);return this.setHSL(e,s,n),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const i=this.r,e=this.g,s=this.b,n=t.elements;return this.r=n[0]*i+n[3]*e+n[6]*s,this.g=n[1]*i+n[4]*e+n[7]*s,this.b=n[2]*i+n[5]*e+n[8]*s,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,i=0){return this.r=t[i],this.g=t[i+1],this.b=t[i+2],this}toArray(t=[],i=0){return t[i]=this.r,t[i+1]=this.g,t[i+2]=this.b,t}fromBufferAttribute(t,i){return this.r=t.getX(i),this.g=t.getY(i),this.b=t.getZ(i),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const D=new ei;ei.NAMES=ae;let Pe=0;class Ie extends Jt{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Pe++}),this.uuid=Ot(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new ei(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const i in t){const e=t[i];if(e===void 0){console.warn(`THREE.Material: parameter '${i}' has value of undefined.`);continue}const s=this[i];if(s===void 0){console.warn(`THREE.Material: '${i}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(e):s&&s.isVector3&&e&&e.isVector3?s.copy(e):this[i]=e}}toJSON(t){const i=t===void 0||typeof t=="string";i&&(t={textures:{},images:{}});const e={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.color&&this.color.isColor&&(e.color=this.color.getHex()),this.roughness!==void 0&&(e.roughness=this.roughness),this.metalness!==void 0&&(e.metalness=this.metalness),this.sheen!==void 0&&(e.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(e.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(e.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(e.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(e.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(e.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(e.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(e.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(e.shininess=this.shininess),this.clearcoat!==void 0&&(e.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(e.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(e.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(e.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(e.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,e.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(e.dispersion=this.dispersion),this.iridescence!==void 0&&(e.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(e.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(e.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(e.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(e.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(e.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(e.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(e.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(e.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(e.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(e.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(e.lightMap=this.lightMap.toJSON(t).uuid,e.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(e.aoMap=this.aoMap.toJSON(t).uuid,e.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(e.bumpMap=this.bumpMap.toJSON(t).uuid,e.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(e.normalMap=this.normalMap.toJSON(t).uuid,e.normalMapType=this.normalMapType,e.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(e.displacementMap=this.displacementMap.toJSON(t).uuid,e.displacementScale=this.displacementScale,e.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(e.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(e.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(e.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(e.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(e.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(e.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(e.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(e.combine=this.combine)),this.envMapRotation!==void 0&&(e.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(e.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(e.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(e.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(e.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(e.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(e.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(e.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(e.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(e.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(e.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(e.size=this.size),this.shadowSide!==null&&(e.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(e.sizeAttenuation=this.sizeAttenuation),this.blending!==1&&(e.blending=this.blending),this.side!==0&&(e.side=this.side),this.vertexColors===!0&&(e.vertexColors=!0),this.opacity<1&&(e.opacity=this.opacity),this.transparent===!0&&(e.transparent=!0),this.blendSrc!==204&&(e.blendSrc=this.blendSrc),this.blendDst!==205&&(e.blendDst=this.blendDst),this.blendEquation!==100&&(e.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(e.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(e.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(e.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(e.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(e.blendAlpha=this.blendAlpha),this.depthFunc!==3&&(e.depthFunc=this.depthFunc),this.depthTest===!1&&(e.depthTest=this.depthTest),this.depthWrite===!1&&(e.depthWrite=this.depthWrite),this.colorWrite===!1&&(e.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(e.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==519&&(e.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(e.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(e.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==7680&&(e.stencilFail=this.stencilFail),this.stencilZFail!==7680&&(e.stencilZFail=this.stencilZFail),this.stencilZPass!==7680&&(e.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(e.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(e.rotation=this.rotation),this.polygonOffset===!0&&(e.polygonOffset=!0),this.polygonOffsetFactor!==0&&(e.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(e.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(e.linewidth=this.linewidth),this.dashSize!==void 0&&(e.dashSize=this.dashSize),this.gapSize!==void 0&&(e.gapSize=this.gapSize),this.scale!==void 0&&(e.scale=this.scale),this.dithering===!0&&(e.dithering=!0),this.alphaTest>0&&(e.alphaTest=this.alphaTest),this.alphaHash===!0&&(e.alphaHash=!0),this.alphaToCoverage===!0&&(e.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(e.premultipliedAlpha=!0),this.forceSinglePass===!0&&(e.forceSinglePass=!0),this.wireframe===!0&&(e.wireframe=!0),this.wireframeLinewidth>1&&(e.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(e.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(e.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(e.flatShading=!0),this.visible===!1&&(e.visible=!1),this.toneMapped===!1&&(e.toneMapped=!1),this.fog===!1&&(e.fog=!1),Object.keys(this.userData).length>0&&(e.userData=this.userData);function s(n){const r=[];for(const a in n){const h=n[a];delete h.metadata,r.push(h)}return r}if(i){const n=s(t.textures),r=s(t.images);n.length>0&&(e.textures=n),r.length>0&&(e.images=r)}return e}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const i=t.clippingPlanes;let e=null;if(i!==null){const s=i.length;e=new Array(s);for(let n=0;n!==s;++n)e[n]=i[n].clone()}return this.clippingPlanes=e,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class Li extends Ie{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ei(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ht,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const C=new x,si=new q;class Rt{constructor(t,i,e=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=i,this.count=t!==void 0?t.length/i:0,this.normalized=e,this.usage=35044,this.updateRanges=[],this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,i){this.updateRanges.push({start:t,count:i})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,i,e){t*=this.itemSize,e*=i.itemSize;for(let s=0,n=this.itemSize;s<n;s++)this.array[t+s]=i.array[e+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let i=0,e=this.count;i<e;i++)si.fromBufferAttribute(this,i),si.applyMatrix3(t),this.setXY(i,si.x,si.y);else if(this.itemSize===3)for(let i=0,e=this.count;i<e;i++)C.fromBufferAttribute(this,i),C.applyMatrix3(t),this.setXYZ(i,C.x,C.y,C.z);return this}applyMatrix4(t){for(let i=0,e=this.count;i<e;i++)C.fromBufferAttribute(this,i),C.applyMatrix4(t),this.setXYZ(i,C.x,C.y,C.z);return this}applyNormalMatrix(t){for(let i=0,e=this.count;i<e;i++)C.fromBufferAttribute(this,i),C.applyNormalMatrix(t),this.setXYZ(i,C.x,C.y,C.z);return this}transformDirection(t){for(let i=0,e=this.count;i<e;i++)C.fromBufferAttribute(this,i),C.transformDirection(t),this.setXYZ(i,C.x,C.y,C.z);return this}set(t,i=0){return this.array.set(t,i),this}getComponent(t,i){let e=this.array[t*this.itemSize+i];return this.normalized&&(e=Nt(e,this.array)),e}setComponent(t,i,e){return this.normalized&&(e=L(e,this.array)),this.array[t*this.itemSize+i]=e,this}getX(t){let i=this.array[t*this.itemSize];return this.normalized&&(i=Nt(i,this.array)),i}setX(t,i){return this.normalized&&(i=L(i,this.array)),this.array[t*this.itemSize]=i,this}getY(t){let i=this.array[t*this.itemSize+1];return this.normalized&&(i=Nt(i,this.array)),i}setY(t,i){return this.normalized&&(i=L(i,this.array)),this.array[t*this.itemSize+1]=i,this}getZ(t){let i=this.array[t*this.itemSize+2];return this.normalized&&(i=Nt(i,this.array)),i}setZ(t,i){return this.normalized&&(i=L(i,this.array)),this.array[t*this.itemSize+2]=i,this}getW(t){let i=this.array[t*this.itemSize+3];return this.normalized&&(i=Nt(i,this.array)),i}setW(t,i){return this.normalized&&(i=L(i,this.array)),this.array[t*this.itemSize+3]=i,this}setXY(t,i,e){return t*=this.itemSize,this.normalized&&(i=L(i,this.array),e=L(e,this.array)),this.array[t+0]=i,this.array[t+1]=e,this}setXYZ(t,i,e,s){return t*=this.itemSize,this.normalized&&(i=L(i,this.array),e=L(e,this.array),s=L(s,this.array)),this.array[t+0]=i,this.array[t+1]=e,this.array[t+2]=s,this}setXYZW(t,i,e,s,n){return t*=this.itemSize,this.normalized&&(i=L(i,this.array),e=L(e,this.array),s=L(s,this.array),n=L(n,this.array)),this.array[t+0]=i,this.array[t+1]=e,this.array[t+2]=s,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==35044&&(t.usage=this.usage),t}}class De extends Rt{constructor(t,i,e){super(new Uint16Array(t),i,e)}}class Oe extends Rt{constructor(t,i,e){super(new Uint32Array(t),i,e)}}class ni extends Rt{constructor(t,i,e){super(new Float32Array(t),i,e)}}let Ne=0;const X=new G,Ui=new st,kt=new x,V=new vt,Gt=new vt,B=new x;class ri extends Jt{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Ne++}),this.uuid=Ot(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(ge(t)?Oe:De)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,i){return this.attributes[t]=i,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,i,e=0){this.groups.push({start:t,count:i,materialIndex:e})}clearGroups(){this.groups=[]}setDrawRange(t,i){this.drawRange.start=t,this.drawRange.count=i}applyMatrix4(t){const i=this.attributes.position;i!==void 0&&(i.applyMatrix4(t),i.needsUpdate=!0);const e=this.attributes.normal;if(e!==void 0){const n=new ot().getNormalMatrix(t);e.applyNormalMatrix(n),e.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return X.makeRotationFromQuaternion(t),this.applyMatrix4(X),this}rotateX(t){return X.makeRotationX(t),this.applyMatrix4(X),this}rotateY(t){return X.makeRotationY(t),this.applyMatrix4(X),this}rotateZ(t){return X.makeRotationZ(t),this.applyMatrix4(X),this}translate(t,i,e){return X.makeTranslation(t,i,e),this.applyMatrix4(X),this}scale(t,i,e){return X.makeScale(t,i,e),this.applyMatrix4(X),this}lookAt(t){return Ui.lookAt(t),Ui.updateMatrix(),this.applyMatrix4(Ui.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(kt).negate(),this.translate(kt.x,kt.y,kt.z),this}setFromPoints(t){const i=[];for(let e=0,s=t.length;e<s;e++){const n=t[e];i.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new ni(i,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new vt);const t=this.attributes.position,i=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new x(-1/0,-1/0,-1/0),new x(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),i)for(let e=0,s=i.length;e<s;e++){const n=i[e];V.setFromBufferAttribute(n),this.morphTargetsRelative?(B.addVectors(this.boundingBox.min,V.min),this.boundingBox.expandByPoint(B),B.addVectors(this.boundingBox.max,V.max),this.boundingBox.expandByPoint(B)):(this.boundingBox.expandByPoint(V.min),this.boundingBox.expandByPoint(V.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Qi);const t=this.attributes.position,i=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new x,1/0);return}if(t){const e=this.boundingSphere.center;if(V.setFromBufferAttribute(t),i)for(let n=0,r=i.length;n<r;n++){const a=i[n];Gt.setFromBufferAttribute(a),this.morphTargetsRelative?(B.addVectors(V.min,Gt.min),V.expandByPoint(B),B.addVectors(V.max,Gt.max),V.expandByPoint(B)):(V.expandByPoint(Gt.min),V.expandByPoint(Gt.max))}V.getCenter(e);let s=0;for(let n=0,r=t.count;n<r;n++)B.fromBufferAttribute(t,n),s=Math.max(s,e.distanceToSquared(B));if(i)for(let n=0,r=i.length;n<r;n++){const a=i[n],h=this.morphTargetsRelative;for(let o=0,l=a.count;o<l;o++)B.fromBufferAttribute(a,o),h&&(kt.fromBufferAttribute(t,o),B.add(kt)),s=Math.max(s,e.distanceToSquared(B))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,i=this.attributes;if(t===null||i.position===void 0||i.normal===void 0||i.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const e=i.position,s=i.normal,n=i.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Rt(new Float32Array(4*e.count),4));const r=this.getAttribute("tangent"),a=[],h=[];for(let z=0;z<e.count;z++)a[z]=new x,h[z]=new x;const o=new x,l=new x,c=new x,u=new q,d=new q,p=new q,f=new x,y=new x;function g(z,T,E){o.fromBufferAttribute(e,z),l.fromBufferAttribute(e,T),c.fromBufferAttribute(e,E),u.fromBufferAttribute(n,z),d.fromBufferAttribute(n,T),p.fromBufferAttribute(n,E),l.sub(o),c.sub(o),d.sub(u),p.sub(u);const R=1/(d.x*p.y-p.x*d.y);isFinite(R)&&(f.copy(l).multiplyScalar(p.y).addScaledVector(c,-d.y).multiplyScalar(R),y.copy(c).multiplyScalar(d.x).addScaledVector(l,-p.x).multiplyScalar(R),a[z].add(f),a[T].add(f),a[E].add(f),h[z].add(y),h[T].add(y),h[E].add(y))}let S=this.groups;S.length===0&&(S=[{start:0,count:t.count}]);for(let z=0,T=S.length;z<T;++z){const E=S[z],R=E.start,$=E.count;for(let k=R,Q=R+$;k<Q;k+=3)g(t.getX(k+0),t.getX(k+1),t.getX(k+2))}const _=new x,M=new x,w=new x,A=new x;function b(z){w.fromBufferAttribute(s,z),A.copy(w);const T=a[z];_.copy(T),_.sub(w.multiplyScalar(w.dot(T))).normalize(),M.crossVectors(A,T);const R=M.dot(h[z])<0?-1:1;r.setXYZW(z,_.x,_.y,_.z,R)}for(let z=0,T=S.length;z<T;++z){const E=S[z],R=E.start,$=E.count;for(let k=R,Q=R+$;k<Q;k+=3)b(t.getX(k+0)),b(t.getX(k+1)),b(t.getX(k+2))}}computeVertexNormals(){const t=this.index,i=this.getAttribute("position");if(i!==void 0){let e=this.getAttribute("normal");if(e===void 0)e=new Rt(new Float32Array(i.count*3),3),this.setAttribute("normal",e);else for(let u=0,d=e.count;u<d;u++)e.setXYZ(u,0,0,0);const s=new x,n=new x,r=new x,a=new x,h=new x,o=new x,l=new x,c=new x;if(t)for(let u=0,d=t.count;u<d;u+=3){const p=t.getX(u+0),f=t.getX(u+1),y=t.getX(u+2);s.fromBufferAttribute(i,p),n.fromBufferAttribute(i,f),r.fromBufferAttribute(i,y),l.subVectors(r,n),c.subVectors(s,n),l.cross(c),a.fromBufferAttribute(e,p),h.fromBufferAttribute(e,f),o.fromBufferAttribute(e,y),a.add(l),h.add(l),o.add(l),e.setXYZ(p,a.x,a.y,a.z),e.setXYZ(f,h.x,h.y,h.z),e.setXYZ(y,o.x,o.y,o.z)}else for(let u=0,d=i.count;u<d;u+=3)s.fromBufferAttribute(i,u+0),n.fromBufferAttribute(i,u+1),r.fromBufferAttribute(i,u+2),l.subVectors(r,n),c.subVectors(s,n),l.cross(c),e.setXYZ(u+0,l.x,l.y,l.z),e.setXYZ(u+1,l.x,l.y,l.z),e.setXYZ(u+2,l.x,l.y,l.z);this.normalizeNormals(),e.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let i=0,e=t.count;i<e;i++)B.fromBufferAttribute(t,i),B.normalize(),t.setXYZ(i,B.x,B.y,B.z)}toNonIndexed(){function t(a,h){const o=a.array,l=a.itemSize,c=a.normalized,u=new o.constructor(h.length*l);let d=0,p=0;for(let f=0,y=h.length;f<y;f++){a.isInterleavedBufferAttribute?d=h[f]*a.data.stride+a.offset:d=h[f]*l;for(let g=0;g<l;g++)u[p++]=o[d++]}return new Rt(u,l,c)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const i=new ri,e=this.index.array,s=this.attributes;for(const a in s){const h=s[a],o=t(h,e);i.setAttribute(a,o)}const n=this.morphAttributes;for(const a in n){const h=[],o=n[a];for(let l=0,c=o.length;l<c;l++){const u=o[l],d=t(u,e);h.push(d)}i.morphAttributes[a]=h}i.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let a=0,h=r.length;a<h;a++){const o=r[a];i.addGroup(o.start,o.count,o.materialIndex)}return i}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const h=this.parameters;for(const o in h)h[o]!==void 0&&(t[o]=h[o]);return t}t.data={attributes:{}};const i=this.index;i!==null&&(t.data.index={type:i.array.constructor.name,array:Array.prototype.slice.call(i.array)});const e=this.attributes;for(const h in e){const o=e[h];t.data.attributes[h]=o.toJSON(t.data)}const s={};let n=!1;for(const h in this.morphAttributes){const o=this.morphAttributes[h],l=[];for(let c=0,u=o.length;c<u;c++){const d=o[c];l.push(d.toJSON(t.data))}l.length>0&&(s[h]=l,n=!0)}n&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const i={};this.name=t.name;const e=t.index;e!==null&&this.setIndex(e.clone(i));const s=t.attributes;for(const o in s){const l=s[o];this.setAttribute(o,l.clone(i))}const n=t.morphAttributes;for(const o in n){const l=[],c=n[o];for(let u=0,d=c.length;u<d;u++)l.push(c[u].clone(i));this.morphAttributes[o]=l}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let o=0,l=r.length;o<l;o++){const c=r[o];this.addGroup(c.start,c.count,c.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const h=t.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const oe=new G,gt=new Ae,hi=new Qi,le=new x,ai=new x,oi=new x,li=new x,Vi=new x,ci=new x,ce=new x,ui=new x;class ue extends st{constructor(t=new ri,i=new Li){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=i,this.updateMorphTargets()}copy(t,i){return super.copy(t,i),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const i=this.geometry.morphAttributes,e=Object.keys(i);if(e.length>0){const s=i[e[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,r=s.length;n<r;n++){const a=s[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=n}}}}getVertexPosition(t,i){const e=this.geometry,s=e.attributes.position,n=e.morphAttributes.position,r=e.morphTargetsRelative;i.fromBufferAttribute(s,t);const a=this.morphTargetInfluences;if(n&&a){ci.set(0,0,0);for(let h=0,o=n.length;h<o;h++){const l=a[h],c=n[h];l!==0&&(Vi.fromBufferAttribute(c,t),r?ci.addScaledVector(Vi,l):ci.addScaledVector(Vi.sub(i),l))}i.add(ci)}return i}raycast(t,i){const e=this.geometry,s=this.material,n=this.matrixWorld;s!==void 0&&(e.boundingSphere===null&&e.computeBoundingSphere(),hi.copy(e.boundingSphere),hi.applyMatrix4(n),gt.copy(t.ray).recast(t.near),!(hi.containsPoint(gt.origin)===!1&&(gt.intersectSphere(hi,le)===null||gt.origin.distanceToSquared(le)>(t.far-t.near)**2))&&(oe.copy(n).invert(),gt.copy(t.ray).applyMatrix4(oe),!(e.boundingBox!==null&&gt.intersectsBox(e.boundingBox)===!1)&&this._computeIntersections(t,i,gt)))}_computeIntersections(t,i,e){let s;const n=this.geometry,r=this.material,a=n.index,h=n.attributes.position,o=n.attributes.uv,l=n.attributes.uv1,c=n.attributes.normal,u=n.groups,d=n.drawRange;if(a!==null)if(Array.isArray(r))for(let p=0,f=u.length;p<f;p++){const y=u[p],g=r[y.materialIndex],S=Math.max(y.start,d.start),_=Math.min(a.count,Math.min(y.start+y.count,d.start+d.count));for(let M=S,w=_;M<w;M+=3){const A=a.getX(M),b=a.getX(M+1),z=a.getX(M+2);s=di(this,g,t,e,o,l,c,A,b,z),s&&(s.faceIndex=Math.floor(M/3),s.face.materialIndex=y.materialIndex,i.push(s))}}else{const p=Math.max(0,d.start),f=Math.min(a.count,d.start+d.count);for(let y=p,g=f;y<g;y+=3){const S=a.getX(y),_=a.getX(y+1),M=a.getX(y+2);s=di(this,r,t,e,o,l,c,S,_,M),s&&(s.faceIndex=Math.floor(y/3),i.push(s))}}else if(h!==void 0)if(Array.isArray(r))for(let p=0,f=u.length;p<f;p++){const y=u[p],g=r[y.materialIndex],S=Math.max(y.start,d.start),_=Math.min(h.count,Math.min(y.start+y.count,d.start+d.count));for(let M=S,w=_;M<w;M+=3){const A=M,b=M+1,z=M+2;s=di(this,g,t,e,o,l,c,A,b,z),s&&(s.faceIndex=Math.floor(M/3),s.face.materialIndex=y.materialIndex,i.push(s))}}else{const p=Math.max(0,d.start),f=Math.min(h.count,d.start+d.count);for(let y=p,g=f;y<g;y+=3){const S=y,_=y+1,M=y+2;s=di(this,r,t,e,o,l,c,S,_,M),s&&(s.faceIndex=Math.floor(y/3),i.push(s))}}}}function Le(m,t,i,e,s,n,r,a){let h;if(t.side===1?h=e.intersectTriangle(r,n,s,!0,a):h=e.intersectTriangle(s,n,r,t.side===0,a),h===null)return null;ui.copy(a),ui.applyMatrix4(m.matrixWorld);const o=i.ray.origin.distanceTo(ui);return o<i.near||o>i.far?null:{distance:o,point:ui.clone(),object:m}}function di(m,t,i,e,s,n,r,a,h,o){m.getVertexPosition(a,ai),m.getVertexPosition(h,oi),m.getVertexPosition(o,li);const l=Le(m,t,i,e,ai,oi,li,ce);if(l){const c=new x;Y.getBarycoord(ce,ai,oi,li,c),s&&(l.uv=Y.getInterpolatedAttribute(s,a,h,o,c,new q)),n&&(l.uv1=Y.getInterpolatedAttribute(n,a,h,o,c,new q)),r&&(l.normal=Y.getInterpolatedAttribute(r,a,h,o,c,new x),l.normal.dot(e.direction)>0&&l.normal.multiplyScalar(-1));const u={a,b:h,c:o,normal:new x,materialIndex:0};Y.getNormal(ai,oi,li,u.normal),l.face=u,l.barycoord=c}return l}class pi extends ri{constructor(t=1,i=1,e=1,s=1,n=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:i,depth:e,widthSegments:s,heightSegments:n,depthSegments:r};const a=this;s=Math.floor(s),n=Math.floor(n),r=Math.floor(r);const h=[],o=[],l=[],c=[];let u=0,d=0;p("z","y","x",-1,-1,e,i,t,r,n,0),p("z","y","x",1,-1,e,i,-t,r,n,1),p("x","z","y",1,1,t,e,i,s,r,2),p("x","z","y",1,-1,t,e,-i,s,r,3),p("x","y","z",1,-1,t,i,e,s,n,4),p("x","y","z",-1,-1,t,i,-e,s,n,5),this.setIndex(h),this.setAttribute("position",new ni(o,3)),this.setAttribute("normal",new ni(l,3)),this.setAttribute("uv",new ni(c,2));function p(f,y,g,S,_,M,w,A,b,z,T){const E=M/b,R=w/z,$=M/2,k=w/2,Q=A/2,j=b+1,Pt=z+1;let bt=0,ft=0;const P=new x;for(let O=0;O<Pt;O++){const v=O*R-k;for(let It=0;It<j;It++){const fi=It*E-$;P[f]=fi*S,P[y]=v*_,P[g]=Q,o.push(P.x,P.y,P.z),P[f]=0,P[y]=0,P[g]=A>0?1:-1,l.push(P.x,P.y,P.z),c.push(It/b),c.push(1-O/z),bt+=1}}for(let O=0;O<z;O++)for(let v=0;v<b;v++){const It=u+v+j*O,fi=u+v+j*(O+1),We=u+(v+1)+j*(O+1),fe=u+(v+1)+j*O;h.push(It,fi,fe),h.push(fi,We,fe),ft+=6}a.addGroup(d,ft,T),d+=ft,u+=bt}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new pi(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}const de={enabled:!1,files:{},add:function(m,t){this.enabled!==!1&&(this.files[m]=t)},get:function(m){if(this.enabled!==!1)return this.files[m]},remove:function(m){delete this.files[m]},clear:function(){this.files={}}};class Ue{constructor(t,i,e){const s=this;let n=!1,r=0,a=0,h;const o=[];this.onStart=void 0,this.onLoad=t,this.onProgress=i,this.onError=e,this.itemStart=function(l){a++,n===!1&&s.onStart!==void 0&&s.onStart(l,r,a),n=!0},this.itemEnd=function(l){r++,s.onProgress!==void 0&&s.onProgress(l,r,a),r===a&&(n=!1,s.onLoad!==void 0&&s.onLoad())},this.itemError=function(l){s.onError!==void 0&&s.onError(l)},this.resolveURL=function(l){return h?h(l):l},this.setURLModifier=function(l){return h=l,this},this.addHandler=function(l,c){return o.push(l,c),this},this.removeHandler=function(l){const c=o.indexOf(l);return c!==-1&&o.splice(c,2),this},this.getHandler=function(l){for(let c=0,u=o.length;c<u;c+=2){const d=o[c],p=o[c+1];if(d.global&&(d.lastIndex=0),d.test(l))return p}return null}}}const Ve=new Ue;class vi{constructor(t){this.manager=t!==void 0?t:Ve,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,i){const e=this;return new Promise(function(s,n){e.load(t,s,i,n)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}vi.DEFAULT_MATERIAL_NAME="__DEFAULT";class ve extends vi{constructor(t){super(t)}load(t,i,e,s){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const n=this,r=de.get(t);if(r!==void 0)return n.manager.itemStart(t),setTimeout(function(){i&&i(r),n.manager.itemEnd(t)},0),r;const a=bi("img");function h(){l(),de.add(t,this),i&&i(this),n.manager.itemEnd(t)}function o(c){l(),s&&s(c),n.manager.itemError(t),n.manager.itemEnd(t)}function l(){a.removeEventListener("load",h,!1),a.removeEventListener("error",o,!1)}return a.addEventListener("load",h,!1),a.addEventListener("error",o,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),n.manager.itemStart(t),a.src=t,a}}class pe extends vi{constructor(t){super(t)}load(t,i,e,s){const n=new lt,r=new ve(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(t,function(a){n.image=a,n.needsUpdate=!0,i!==void 0&&i(n)},e,s),n}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ht}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ht);function Xe(m){return m[1]+m[2]+m[3]+m[0]}function me(m,t){let i=m;for(let e=0;e<t;e++)i=Xe(i);return i}const Mt=class Mt{constructor(){F(this,"textures");F(this,"loader");this.textures=new Map,this.loader=new pe}static getInstance(){return Mt.instance||(Mt.instance=new Mt),Mt.instance}getTexture(t){if(this.textures.has(t))return this.textures.get(t);const i=this.loader.load(`/Eternity-II-ThreeJS/pieces/${t}.png`);return i.colorSpace=K,this.textures.set(t,i),i}async loadTextures(t){const i=t.map(e=>new Promise(s=>{this.loader.load(`/Eternity-II-ThreeJS/pieces/${e}.png`,n=>{n.colorSpace=K,this.textures.set(e,n),s()})}));await Promise.all(i)}};F(Mt,"instance");let Xi=Mt;class mi{constructor(t,i,e=0,s=5/16.7){F(this,"name");F(this,"mesh");F(this,"rotation");F(this,"scale");F(this,"isClone");F(this,"geometry");F(this,"material");F(this,"outlineGeometry");F(this,"outlineMaterial");F(this,"outlineMesh");F(this,"precomputedRotations",[]);if(this.name=t,this.scale=s,this.rotation=e,this.isClone=!1,this.precomputeRotations(),typeof document<"u")if(i)this.mesh=i,this.mesh.scale.set(s,s,.1),this.isClone=!0;else{this.geometry=new pi(s,s,.1);const n=Xi.getInstance().getTexture(t);this.material=new Li({map:n,transparent:!1}),this.mesh=new ue(this.geometry,this.material)}}get rotatedName(){return me(this.name,this.rotation)}precomputeRotations(){for(let t=0;t<4;t++){const i=me(this.name,t),e=this.parseConnectors(i);this.precomputedRotations.push({rotation:t,rotatedName:i,connectors:e})}}parseConnectors(t){const i={top:{color:"*"},right:{color:"*"},bottom:{color:"*"},left:{color:"*"}},e=t.split(""),s=["top","right","bottom","left"];return e.forEach((n,r)=>{const a=s[r];i[a].color=n}),i}getEdgeColor(t){return this.precomputedRotations[this.rotation].connectors[t].color}outline(t){this.outlineGeometry=new pi(5/16.7,5/16.7,.1),this.outlineMaterial=new Li({map:new pe().load("/Eternity-II-ThreeJS/outline.png"),transparent:!0}),this.outlineMesh=new ue(this.outlineGeometry,this.outlineMaterial),t.add(this.outlineMesh),this.outlineMesh.position.z=.1,this.mesh&&(this.outlineMesh.position.x=this.mesh.position.x,this.outlineMesh.position.y=this.mesh.position.y)}remove(t){this.mesh&&t.remove(this.mesh)}clone(){if(!this.mesh)return new mi(this.name,void 0,0,2.3/16.7);const t=this.mesh.clone();return t.rotation.z=0,new mi(this.name,t,this.rotation,2.3/16.7)}}const qe=["AQXX","AEXX","IQXX","QIXX","BAXA","JIXA","FAXA","FMXA","KQXA","GEXA","OIXA","HEXA","HMXA","UEXA","JAXI","RQXI","NMXI","SMXI","GIXI","OIXI","DEXI","LAXI","LMXI","TAXI","UAXI","BIXQ","BQXQ","JQXQ","RQXQ","GMXQ","OIXQ","TQXQ","HIXQ","HEXQ","PMXQ","VEXQ","RAXE","CMXE","KMXE","SIXE","SQXE","OAXE","OIXE","OQXE","DAXE","TEXE","HEXE","PEXE","BMXM","JAXM","JIXM","FAXM","GEXM","DEXM","DMXM","HQXM","PAXM","PMXM","UIXM","VQXM","FRBB","NGBB","JCBJ","BHBR","RVBR","NNBR","KJBR","TFBR","VHBR","CGBC","GLBC","NRBK","ODBK","TOBK","HCBK","NOBS","SOBS","CPBG","TCBG","PUBG","SRBO","RRBD","KDBD","RSBL","FNBL","HLBL","PTBL","BUBT","FVBT","DPBT","KLBH","SOBH","SDBH","DUBH","LNBH","UCBU","DSBV","THBV","UFBV","VUBV","LOJJ","LPJJ","PSJJ","VFJJ","DOJR","CHJF","SHJF","DOJF","PKJF","OLJN","LOJN","TSJC","TPJC","NDJK","GLJK","LKJK","VPJK","CUJS","PLJG","HVJO","NVJD","FPJT","NSJT","TOJT","LVJH","UOJH","NFJP","SUJP","DCJP","THJP","FTJU","LNJU","NPJV","KDJV","DCJV","PTJV","TGRR","FCRF","FKRF","FLRF","SURF","OFRF","PLRF","UURF","CDRN","RLRC","RVRC","CNRC","OLRC","FKRS","DVRS","KKRG","KSRG","VPRG","GGRD","GLRD","VGRD","GPRT","HFRT","UURH","FTRP","NTRP","OKRV","DPRV","CDFN","DHFN","CCFK","KOFS","SUFS","DHFG","TPFG","UKFG","OOFO","LTFO","GUFD","GSFL","NDFT","LPFH","HOFH","GPFP","KPFU","GKFU","SHNN","VGNC","SLNK","HHNK","UGNS","NUNG","CSNG","PSNG","CCNO","OTNO","KGND","UKNL","UVNL","VONL","KVNT","SHNT","TTNT","SCNH","UHNP","VGNP","LSNU","LHNU","PCNU","VUNU","VGCC","SVCK","HOCK","KSCG","POCG","CPCO","HHCD","CTCL","DVCL","VUCL","SOCT","DLCP","KDCU","KPCV","UUCV","UVCV","LVKK","TGKK","POKK","SOKG","LLKG","SHKD","GVKT","PHKT","LTKH","LUKH","STSS","PDSG","GDSD","GTSD","LOSD","DPSL","OVST","UOST","GUSH","DUSH","OLGO","THGO","VTGD","PVGU","UVOO","LDOD","DUOL","PUOT","VHDD","HLDL","PTLH","UPTP","PVTV","UVHV"];class He{constructor(){F(this,"piecesMap");F(this,"stop");F(this,"numMoves");F(this,"lastPlacedCase");F(this,"maxNumCase");F(this,"stack");F(this,"placedPieces");F(this,"updateIntervalMs");F(this,"lastUpdateTime");F(this,"nextBatchTimeout");F(this,"edgeIndex",{top:new Map,right:new Map,bottom:new Map,left:new Map});this.piecesMap=new Map,this.stop=!1,this.numMoves=0,this.lastPlacedCase=-1,this.maxNumCase=0,this.stack=[],this.placedPieces=new Array(256).fill(void 0),this.updateIntervalMs=500,this.lastUpdateTime=performance.now()}initDict(t){for(const i of t){const e=new mi(i);this.piecesMap.set(e.name,e),this.indexPiece(e)}this.shuffle(),this.initStack(),this.placeCenterPiece()}indexPiece(t){var i;for(const e of t.precomputedRotations)for(const s of["top","right","bottom","left"]){const n=e.connectors[s].color;n!=="*"&&(this.edgeIndex[s].has(n)||this.edgeIndex[s].set(n,[]),(i=this.edgeIndex[s].get(n))==null||i.push(t))}}shuffle(){const t=Array.from(this.piecesMap.values());for(let i=t.length-1;i>0;i--){const e=Math.floor(Math.random()*(i+1));[t[i],t[e]]=[t[e],t[i]]}this.piecesMap=new Map(t.map(i=>[i.name,i]))}initStack(){this.stack.push({piece:null,rotation:0,spot:-1})}solve(){this.stop=!1,this.solveNextBatch()}placeCenterPiece(){const t=Array.from(this.piecesMap.values()).find(i=>i.name==="FKRF");t&&(t.rotation=2,this.piecesMap.delete(t.name),this.placedPieces[135]=t,this.lastPlacedCase=135,this.removePieceFromEdgeIndex(t))}solveNextBatch(){if(this.stop||this.stack.length===0){const e={type:"finished",data:{boardState:this.getBoardState(),numMoves:this.numMoves,lastPlacedCase:this.lastPlacedCase}};postMessage(e,[e.data.boardState]);return}const t=performance.now(),i=200;for(;performance.now()-t<i&&!(this.stop||this.stack.length===0);)if(this.processStep(),performance.now()-this.lastUpdateTime>=this.updateIntervalMs){this.lastUpdateTime=performance.now();const e={type:"update",data:{boardState:this.getBoardState(),numMoves:this.numMoves,lastPlacedCase:this.lastPlacedCase}};postMessage(e,[e.data.boardState]),this.numMoves=0}this.stop||(this.nextBatchTimeout=setTimeout(()=>{this.solveNextBatch()},0))}processStep(){const t=this.stack.pop();if(!t)return;const{piece:i,spot:e,rotation:s}=t;for(let h=this.lastPlacedCase;h>e-1;h--)if(h!==135){const o=this.removePieceFromSpot(h);o&&(this.piecesMap.set(o.name,o),this.indexPiece(o))}if(this.lastPlacedCase=e,e!==135&&i&&(this.addPieceToSpot(i,s,e),this.piecesMap.delete(i.name),this.removePieceFromEdgeIndex(i)),this.numMoves++,e===255){this.stop=!0;return}const n=e+1,r=this.getConstraints(n),a=this.findMatchingPieces(r);for(const[h,o]of a)this.stack.push({piece:h,rotation:o,spot:n})}addPieceToSpot(t,i,e){t.rotation=i,this.placedPieces[e]=t,this.lastPlacedCase=e,e>this.maxNumCase&&(this.maxNumCase=e)}removePieceFromSpot(t){const i=this.placedPieces[t];return this.placedPieces[t]=void 0,i}removePieceFromEdgeIndex(t){for(const i of t.precomputedRotations)for(const e of["top","right","bottom","left"]){const s=i.connectors[e].color;if(s!=="*"){const n=this.edgeIndex[e].get(s);if(n){const r=n.indexOf(t);r!==-1&&(n.splice(r,1),n.length===0&&this.edgeIndex[e].delete(s))}}}}findMatchingPieces(t){const i={};t.top!=="*"&&(i.top=t.top),t.right!=="*"&&(i.right=t.right),t.bottom!=="*"&&(i.bottom=t.bottom),t.left!=="*"&&(i.left=t.left);let e=null;for(const[n,r]of Object.entries(i)){const a=this.edgeIndex[n].get(r);if(!a)return[];const h=new Set(a);if(e===null)e=h;else if(e=new Set([...e].filter(o=>h.has(o))),e.size===0)return[]}e||(e=new Set(this.piecesMap.values()));const s=[];for(const n of e)for(const r of n.precomputedRotations){let a=!0;for(const h of["top","right","bottom","left"]){const o=i[h];if(o&&r.connectors[h].color!==o){a=!1;break}}a&&s.push([n,r.rotation])}return s}getConstraints(t){const i={top:"X",right:"X",bottom:"X",left:"X"},e=t%16,s=Math.floor(t/16);if(s>0){const n=this.placedPieces[t-16];n?i.top=n.getEdgeColor("bottom"):i.top="*"}if(e<15){const n=this.placedPieces[t+1];n?i.right=n.getEdgeColor("left"):i.right="*"}if(s<15){const n=this.placedPieces[t+16];n?i.bottom=n.getEdgeColor("top"):i.bottom="*"}if(e>0){const n=this.placedPieces[t-1];n?i.left=n.getEdgeColor("right"):i.left="*"}return i}getBoardState(){const t=[];for(let n=0;n<=this.maxNumCase;n++){const r=this.placedPieces[n];r&&t.push({spot:n,piece:r})}const i=t.length,e=new Uint8Array(i*3);let s=0;for(const{spot:n,piece:r}of t){const a=qe.indexOf(r.name);e[s++]=n,e[s++]=a,e[s++]=r.rotation}return e.buffer}stopSolver(){this.stop=!0,this.nextBatchTimeout&&clearTimeout(this.nextBatchTimeout)}}const qi=new He;self.onmessage=m=>{const t=m.data;switch(t.type){case"init":qi.initDict(t.data.pieceCodes);break;case"solve":qi.solve();break;case"stop":qi.stopSolver();break}}})();
